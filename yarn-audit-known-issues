{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1004784,"path":"mochawesome-report-generator>validator","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"10.11.0","paths":["mochawesome-report-generator>validator","mochawesome>mochawesome-report-generator>validator"]}],"metadata":null,"vulnerable_versions":"<13.7.0","module_name":"validator","severity":"moderate","github_advisory_id":"GHSA-qgmg-gppg-76g5","cves":["CVE-2021-3765"],"access":"public","patched_versions":">=13.7.0","updated":"2021-11-03T14:46:01.000Z","recommendation":"Upgrade to version 13.7.0 or later","cwe":"CWE-1333","found_by":null,"deleted":null,"id":1004784,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3765\n- https://github.com/advisories/GHSA-qgmg-gppg-76g5","created":"2021-11-03T18:00:36.336Z","reported_by":null,"title":"Inefficient Regular Expression Complexity in validator.js","npm_advisory_id":null,"overview":"validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-qgmg-gppg-76g5"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1004784,"path":"mochawesome>mochawesome-report-generator>validator","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"10.11.0","paths":["mochawesome-report-generator>validator","mochawesome>mochawesome-report-generator>validator"]}],"metadata":null,"vulnerable_versions":"<13.7.0","module_name":"validator","severity":"moderate","github_advisory_id":"GHSA-qgmg-gppg-76g5","cves":["CVE-2021-3765"],"access":"public","patched_versions":">=13.7.0","updated":"2021-11-03T14:46:01.000Z","recommendation":"Upgrade to version 13.7.0 or later","cwe":"CWE-1333","found_by":null,"deleted":null,"id":1004784,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3765\n- https://github.com/advisories/GHSA-qgmg-gppg-76g5","created":"2021-11-03T18:00:36.336Z","reported_by":null,"title":"Inefficient Regular Expression Complexity in validator.js","npm_advisory_id":null,"overview":"validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-qgmg-gppg-76g5"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002567,"path":"xlsx","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.15.4","paths":["xlsx"]}],"metadata":null,"vulnerable_versions":"<0.17.0","module_name":"xlsx","severity":"moderate","github_advisory_id":"GHSA-g973-978j-2c3p","cves":["CVE-2021-32014"],"access":"public","patched_versions":">=0.17.0","updated":"2021-07-19T21:44:43.000Z","recommendation":"Upgrade to version 0.17.0 or later","cwe":"CWE-345","found_by":null,"deleted":null,"id":1002567,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-32014\n- https://github.com/advisories/GHSA-g973-978j-2c3p","created":"2021-10-07T07:31:50.531Z","reported_by":null,"title":"Denial of Service in SheetJS Pro","npm_advisory_id":null,"overview":"SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (CPU consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js.","url":"https://github.com/advisories/GHSA-g973-978j-2c3p"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002568,"path":"xlsx","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.15.4","paths":["xlsx"]}],"metadata":null,"vulnerable_versions":"<0.17.0","module_name":"xlsx","severity":"moderate","github_advisory_id":"GHSA-3x9f-74h4-2fqr","cves":["CVE-2021-32012"],"access":"public","patched_versions":">=0.17.0","updated":"2021-07-19T21:44:39.000Z","recommendation":"Upgrade to version 0.17.0 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002568,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-32012\n- https://github.com/advisories/GHSA-3x9f-74h4-2fqr","created":"2021-10-07T07:31:50.531Z","reported_by":null,"title":"Denial of Service in SheetJS Pro","npm_advisory_id":null,"overview":"SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 1 of 2).","url":"https://github.com/advisories/GHSA-3x9f-74h4-2fqr"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002569,"path":"xlsx","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.15.4","paths":["xlsx"]}],"metadata":null,"vulnerable_versions":"<0.17.0","module_name":"xlsx","severity":"moderate","github_advisory_id":"GHSA-8vcr-vxm8-293m","cves":["CVE-2021-32013"],"access":"public","patched_versions":">=0.17.0","updated":"2021-07-19T21:41:18.000Z","recommendation":"Upgrade to version 0.17.0 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002569,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-32013\n- https://github.com/advisories/GHSA-8vcr-vxm8-293m","created":"2021-10-07T07:31:50.532Z","reported_by":null,"title":"Denial of Service in SheetsJS Pro","npm_advisory_id":null,"overview":"SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (memory consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js (issue 2 of 2).","url":"https://github.com/advisories/GHSA-8vcr-vxm8-293m"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002615,"path":"accessibility-checker>puppeteer>ws","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.2.1","paths":["accessibility-checker>puppeteer>ws"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.2.2","module_name":"ws","severity":"moderate","github_advisory_id":"GHSA-6fc8-4gx4-v693","cves":["CVE-2021-32640"],"access":"public","patched_versions":">=6.2.2","updated":"2021-06-08T21:04:18.000Z","recommendation":"Upgrade to version 6.2.2 or later","cwe":"CWE-345","found_by":null,"deleted":null,"id":1002615,"references":"- https://github.com/websockets/ws/security/advisories/GHSA-6fc8-4gx4-v693\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32640\n- https://github.com/advisories/GHSA-6fc8-4gx4-v693","created":"2021-10-07T07:31:50.538Z","reported_by":null,"title":"ReDoS in Sec-Websocket-Protocol header","npm_advisory_id":null,"overview":"### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(/ *, */);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https://github.com/websockets/ws/commit/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https://github.com/websockets/ws/commit/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.\n","url":"https://github.com/advisories/GHSA-6fc8-4gx4-v693"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002377,"path":"@hmcts/rpx-xui-node-lib>passport-oauth2","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.5.0","paths":["@hmcts/rpx-xui-node-lib>passport-oauth2"]}],"metadata":null,"vulnerable_versions":"<1.6.1","module_name":"passport-oauth2","severity":"moderate","github_advisory_id":"GHSA-f794-r6xc-hf3v","cves":["CVE-2021-41580"],"access":"public","patched_versions":">=1.6.1","updated":"2021-09-28T21:14:22.000Z","recommendation":"Upgrade to version 1.6.1 or later","cwe":"CWE-287","found_by":null,"deleted":null,"id":1002377,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-41580\n- https://github.com/advisories/GHSA-f794-r6xc-hf3v","created":"2021-10-07T07:31:50.499Z","reported_by":null,"title":"Improper Access Control in passport-oauth2","npm_advisory_id":null,"overview":"The passport-oauth2 package before 1.6.1 for Node.js mishandles the error condition of failure to obtain an access token. This is exploitable in certain use cases where an OAuth identity provider uses an HTTP 200 status code for authentication-failure error reports, and an application grants authorization upon simply receiving the access token (i.e., does not try to use the token). NOTE: the passport-oauth2 vendor does not consider this a passport-oauth2 vulnerability.","url":"https://github.com/advisories/GHSA-f794-r6xc-hf3v"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002422,"path":"ngx-md>prismjs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.23.0","paths":["ngx-md>prismjs"]}],"metadata":null,"vulnerable_versions":"<1.25.0","module_name":"prismjs","severity":"moderate","github_advisory_id":"GHSA-hqhp-5p83-hx96","cves":["CVE-2021-3801"],"access":"public","patched_versions":">=1.25.0","updated":"2021-09-20T20:44:38.000Z","recommendation":"Upgrade to version 1.25.0 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002422,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3801\n- https://github.com/advisories/GHSA-hqhp-5p83-hx96","created":"2021-10-07T07:31:50.506Z","reported_by":null,"title":"Regular Expression Denial of Service in prismjs","npm_advisory_id":null,"overview":"The prismjs package is vulnerable to ReDoS (regular expression denial of service). An attacker that is able to provide a crafted HTML comment as input may cause an application to consume an excessive amount of CPU.","url":"https://github.com/advisories/GHSA-hqhp-5p83-hx96"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002580,"path":"ngx-md>prismjs","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.23.0","paths":["ngx-md>prismjs"]}],"metadata":null,"vulnerable_versions":"<1.24.0","module_name":"prismjs","severity":"high","github_advisory_id":"GHSA-gj77-59wh-66hg","cves":["CVE-2021-32723"],"access":"public","patched_versions":">=1.24.0","updated":"2021-06-28T18:32:14.000Z","recommendation":"Upgrade to version 1.24.0 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002580,"references":"- https://github.com/PrismJS/prism/security/advisories/GHSA-gj77-59wh-66hg\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32723\n- https://github.com/advisories/GHSA-gj77-59wh-66hg","created":"2021-10-07T07:31:50.534Z","reported_by":null,"title":"Regular Expression Denial of Service (ReDoS) in Prism","npm_advisory_id":null,"overview":"Some languages before 1.24.0 are vulnerable to Regular Expression Denial of Service (ReDoS).\n\n### Impact\n\nWhen Prism is used to highlight untrusted (user-given) text, an attacker can craft a string that will take a very very long time to highlight. Do not use the following languages to highlight untrusted text.\n\n- ASCIIDoc\n- ERB\n\nOther languages are __not__ affected and can be used to highlight untrusted text.\n\n### Patches\nThis problem has been fixed in Prism v1.24.\n\n### References\n\n- PrismJS/prism#2774\n- PrismJS/prism#2688\n","url":"https://github.com/advisories/GHSA-gj77-59wh-66hg"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002477,"path":"axios","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.21.1","paths":["axios","@hmcts/rpx-xui-node-lib>axios","accessibility-checker>chromedriver>axios"]}],"metadata":null,"vulnerable_versions":"<=0.21.1","module_name":"axios","severity":"high","github_advisory_id":"GHSA-cph5-m8f7-6c5x","cves":["CVE-2021-3749"],"access":"public","patched_versions":">=0.21.2","updated":"2021-09-08T16:46:47.000Z","recommendation":"Upgrade to version 0.21.2 or later","cwe":"CWE-697","found_by":null,"deleted":null,"id":1002477,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3749\n- https://github.com/advisories/GHSA-cph5-m8f7-6c5x","created":"2021-10-07T07:31:50.512Z","reported_by":null,"title":"Incorrect Comparison in axios","npm_advisory_id":null,"overview":"axios is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-cph5-m8f7-6c5x"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002477,"path":"@hmcts/rpx-xui-node-lib>axios","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.21.1","paths":["axios","@hmcts/rpx-xui-node-lib>axios","accessibility-checker>chromedriver>axios"]}],"metadata":null,"vulnerable_versions":"<=0.21.1","module_name":"axios","severity":"high","github_advisory_id":"GHSA-cph5-m8f7-6c5x","cves":["CVE-2021-3749"],"access":"public","patched_versions":">=0.21.2","updated":"2021-09-08T16:46:47.000Z","recommendation":"Upgrade to version 0.21.2 or later","cwe":"CWE-697","found_by":null,"deleted":null,"id":1002477,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3749\n- https://github.com/advisories/GHSA-cph5-m8f7-6c5x","created":"2021-10-07T07:31:50.512Z","reported_by":null,"title":"Incorrect Comparison in axios","npm_advisory_id":null,"overview":"axios is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-cph5-m8f7-6c5x"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002477,"path":"accessibility-checker>chromedriver>axios","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.21.1","paths":["axios","@hmcts/rpx-xui-node-lib>axios","accessibility-checker>chromedriver>axios"]}],"metadata":null,"vulnerable_versions":"<=0.21.1","module_name":"axios","severity":"high","github_advisory_id":"GHSA-cph5-m8f7-6c5x","cves":["CVE-2021-3749"],"access":"public","patched_versions":">=0.21.2","updated":"2021-09-08T16:46:47.000Z","recommendation":"Upgrade to version 0.21.2 or later","cwe":"CWE-697","found_by":null,"deleted":null,"id":1002477,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3749\n- https://github.com/advisories/GHSA-cph5-m8f7-6c5x","created":"2021-10-07T07:31:50.512Z","reported_by":null,"title":"Incorrect Comparison in axios","npm_advisory_id":null,"overview":"axios is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-cph5-m8f7-6c5x"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002501,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.9","module_name":"tar","severity":"high","github_advisory_id":"GHSA-5955-9wpr-37jh","cves":["CVE-2021-37713"],"access":"public","patched_versions":">=6.1.9","updated":"2021-08-31T16:02:33.000Z","recommendation":"Upgrade to version 6.1.9 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002501,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37713\n- https://github.com/advisories/GHSA-5955-9wpr-37jh","created":"2021-10-07T07:31:50.518Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n","url":"https://github.com/advisories/GHSA-5955-9wpr-37jh"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002501,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.9","module_name":"tar","severity":"high","github_advisory_id":"GHSA-5955-9wpr-37jh","cves":["CVE-2021-37713"],"access":"public","patched_versions":">=6.1.9","updated":"2021-08-31T16:02:33.000Z","recommendation":"Upgrade to version 6.1.9 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002501,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37713\n- https://github.com/advisories/GHSA-5955-9wpr-37jh","created":"2021-10-07T07:31:50.518Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n","url":"https://github.com/advisories/GHSA-5955-9wpr-37jh"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002504,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.9","module_name":"tar","severity":"high","github_advisory_id":"GHSA-qq89-hq3f-393p","cves":["CVE-2021-37712"],"access":"public","patched_versions":">=6.1.9","updated":"2021-08-31T16:02:05.000Z","recommendation":"Upgrade to version 6.1.9 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002504,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37712\n- https://github.com/advisories/GHSA-qq89-hq3f-393p","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n","url":"https://github.com/advisories/GHSA-qq89-hq3f-393p"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002504,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.9","module_name":"tar","severity":"high","github_advisory_id":"GHSA-qq89-hq3f-393p","cves":["CVE-2021-37712"],"access":"public","patched_versions":">=6.1.9","updated":"2021-08-31T16:02:05.000Z","recommendation":"Upgrade to version 6.1.9 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002504,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37712\n- https://github.com/advisories/GHSA-qq89-hq3f-393p","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n","url":"https://github.com/advisories/GHSA-qq89-hq3f-393p"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002507,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.7","module_name":"tar","severity":"high","github_advisory_id":"GHSA-9r2w-394v-53qc","cves":["CVE-2021-37701"],"access":"public","patched_versions":">=6.1.7","updated":"2021-08-31T16:01:51.000Z","recommendation":"Upgrade to version 6.1.7 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002507,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37701\n- https://github.com/advisories/GHSA-9r2w-394v-53qc","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.","url":"https://github.com/advisories/GHSA-9r2w-394v-53qc"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002507,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.7","module_name":"tar","severity":"high","github_advisory_id":"GHSA-9r2w-394v-53qc","cves":["CVE-2021-37701"],"access":"public","patched_versions":">=6.1.7","updated":"2021-08-31T16:01:51.000Z","recommendation":"Upgrade to version 6.1.7 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002507,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37701\n- https://github.com/advisories/GHSA-9r2w-394v-53qc","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.","url":"https://github.com/advisories/GHSA-9r2w-394v-53qc"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002539,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.1","module_name":"tar","severity":"high","github_advisory_id":"GHSA-3jfq-g458-7qm9","cves":["CVE-2021-32804"],"access":"public","patched_versions":">=6.1.1","updated":"2021-08-03T19:06:16.000Z","recommendation":"Upgrade to version 6.1.1 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002539,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-3jfq-g458-7qm9\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32804\n- https://github.com/advisories/GHSA-3jfq-g458-7qm9","created":"2021-10-07T07:31:50.525Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite due to insufficient absolute path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-3jfq-g458-7qm9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002539,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.1","module_name":"tar","severity":"high","github_advisory_id":"GHSA-3jfq-g458-7qm9","cves":["CVE-2021-32804"],"access":"public","patched_versions":">=6.1.1","updated":"2021-08-03T19:06:16.000Z","recommendation":"Upgrade to version 6.1.1 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002539,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-3jfq-g458-7qm9\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32804\n- https://github.com/advisories/GHSA-3jfq-g458-7qm9","created":"2021-10-07T07:31:50.525Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite due to insufficient absolute path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-3jfq-g458-7qm9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002543,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.2","module_name":"tar","severity":"high","github_advisory_id":"GHSA-r628-mhmh-qjhw","cves":["CVE-2021-32803"],"access":"public","patched_versions":">=6.1.2","updated":"2021-08-03T18:59:59.000Z","recommendation":"Upgrade to version 6.1.2 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002543,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32803\n- https://github.com/advisories/GHSA-r628-mhmh-qjhw","created":"2021-10-07T07:31:50.525Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-r628-mhmh-qjhw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002543,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"6.0.2","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>make-fetch-happen>cacache>tar","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>make-fetch-happen>cacache>tar"]}],"metadata":null,"vulnerable_versions":">=6.0.0 <6.1.2","module_name":"tar","severity":"high","github_advisory_id":"GHSA-r628-mhmh-qjhw","cves":["CVE-2021-32803"],"access":"public","patched_versions":">=6.1.2","updated":"2021-08-03T18:59:59.000Z","recommendation":"Upgrade to version 6.1.2 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002543,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32803\n- https://github.com/advisories/GHSA-r628-mhmh-qjhw","created":"2021-10-07T07:31:50.525Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-r628-mhmh-qjhw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002536,"path":"@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.6","paths":["@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","git-rev-sync>shelljs>rechoir>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse"]}],"metadata":null,"vulnerable_versions":"<1.0.7","module_name":"path-parse","severity":"moderate","github_advisory_id":"GHSA-hj48-42vr-x3v9","cves":["CVE-2021-23343"],"access":"public","patched_versions":">=1.0.7","updated":"2021-08-10T15:33:31.000Z","recommendation":"Upgrade to version 1.0.7 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002536,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23343\n- https://github.com/advisories/GHSA-hj48-42vr-x3v9","created":"2021-10-07T07:31:50.524Z","reported_by":null,"title":"Regular Expression Denial of Service in path-parse","npm_advisory_id":null,"overview":"Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.","url":"https://github.com/advisories/GHSA-hj48-42vr-x3v9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002536,"path":"git-rev-sync>shelljs>rechoir>resolve>path-parse","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.6","paths":["@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","git-rev-sync>shelljs>rechoir>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse"]}],"metadata":null,"vulnerable_versions":"<1.0.7","module_name":"path-parse","severity":"moderate","github_advisory_id":"GHSA-hj48-42vr-x3v9","cves":["CVE-2021-23343"],"access":"public","patched_versions":">=1.0.7","updated":"2021-08-10T15:33:31.000Z","recommendation":"Upgrade to version 1.0.7 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002536,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23343\n- https://github.com/advisories/GHSA-hj48-42vr-x3v9","created":"2021-10-07T07:31:50.524Z","reported_by":null,"title":"Regular Expression Denial of Service in path-parse","npm_advisory_id":null,"overview":"Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.","url":"https://github.com/advisories/GHSA-hj48-42vr-x3v9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002536,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.6","paths":["@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","git-rev-sync>shelljs>rechoir>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse"]}],"metadata":null,"vulnerable_versions":"<1.0.7","module_name":"path-parse","severity":"moderate","github_advisory_id":"GHSA-hj48-42vr-x3v9","cves":["CVE-2021-23343"],"access":"public","patched_versions":">=1.0.7","updated":"2021-08-10T15:33:31.000Z","recommendation":"Upgrade to version 1.0.7 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002536,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23343\n- https://github.com/advisories/GHSA-hj48-42vr-x3v9","created":"2021-10-07T07:31:50.524Z","reported_by":null,"title":"Regular Expression Denial of Service in path-parse","npm_advisory_id":null,"overview":"Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.","url":"https://github.com/advisories/GHSA-hj48-42vr-x3v9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002536,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.6","paths":["@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","git-rev-sync>shelljs>rechoir>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse"]}],"metadata":null,"vulnerable_versions":"<1.0.7","module_name":"path-parse","severity":"moderate","github_advisory_id":"GHSA-hj48-42vr-x3v9","cves":["CVE-2021-23343"],"access":"public","patched_versions":">=1.0.7","updated":"2021-08-10T15:33:31.000Z","recommendation":"Upgrade to version 1.0.7 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002536,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23343\n- https://github.com/advisories/GHSA-hj48-42vr-x3v9","created":"2021-10-07T07:31:50.524Z","reported_by":null,"title":"Regular Expression Denial of Service in path-parse","npm_advisory_id":null,"overview":"Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.","url":"https://github.com/advisories/GHSA-hj48-42vr-x3v9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002536,"path":"@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.0.6","paths":["@hmcts/rpx-xui-node-lib>ttypescript>resolve>path-parse","git-rev-sync>shelljs>rechoir>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>resolve>path-parse","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>resolve>path-parse"]}],"metadata":null,"vulnerable_versions":"<1.0.7","module_name":"path-parse","severity":"moderate","github_advisory_id":"GHSA-hj48-42vr-x3v9","cves":["CVE-2021-23343"],"access":"public","patched_versions":">=1.0.7","updated":"2021-08-10T15:33:31.000Z","recommendation":"Upgrade to version 1.0.7 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002536,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23343\n- https://github.com/advisories/GHSA-hj48-42vr-x3v9","created":"2021-10-07T07:31:50.524Z","reported_by":null,"title":"Regular Expression Denial of Service in path-parse","npm_advisory_id":null,"overview":"Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.","url":"https://github.com/advisories/GHSA-hj48-42vr-x3v9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002578,"path":"@hmcts/rpx-xui-node-lib>openid-client>got>cacheable-request>normalize-url","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.5.0","paths":["@hmcts/rpx-xui-node-lib>openid-client>got>cacheable-request>normalize-url","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>latest-version>package-json>got>cacheable-request>normalize-url"]}],"metadata":null,"vulnerable_versions":">=4.3.0 <4.5.1","module_name":"normalize-url","severity":"high","github_advisory_id":"GHSA-px4h-xg32-q955","cves":["CVE-2021-33502"],"access":"public","patched_versions":">=4.5.1","updated":"2021-06-29T02:55:28.000Z","recommendation":"Upgrade to version 4.5.1 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002578,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-33502\n- https://github.com/advisories/GHSA-px4h-xg32-q955","created":"2021-10-07T07:31:50.533Z","reported_by":null,"title":"ReDoS in normalize-url","npm_advisory_id":null,"overview":"The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.","url":"https://github.com/advisories/GHSA-px4h-xg32-q955"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002578,"path":"@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>latest-version>package-json>got>cacheable-request>normalize-url","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.5.0","paths":["@hmcts/rpx-xui-node-lib>openid-client>got>cacheable-request>normalize-url","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>latest-version>package-json>got>cacheable-request>normalize-url"]}],"metadata":null,"vulnerable_versions":">=4.3.0 <4.5.1","module_name":"normalize-url","severity":"high","github_advisory_id":"GHSA-px4h-xg32-q955","cves":["CVE-2021-33502"],"access":"public","patched_versions":">=4.5.1","updated":"2021-06-29T02:55:28.000Z","recommendation":"Upgrade to version 4.5.1 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002578,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-33502\n- https://github.com/advisories/GHSA-px4h-xg32-q955","created":"2021-10-07T07:31:50.533Z","reported_by":null,"title":"ReDoS in normalize-url","npm_advisory_id":null,"overview":"The normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.","url":"https://github.com/advisories/GHSA-px4h-xg32-q955"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002581,"path":"@hmcts/rpx-xui-node-lib>ts-auto-mock>winston>@dabh/diagnostics>colorspace>color>color-string","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.5.3","paths":["@hmcts/rpx-xui-node-lib>ts-auto-mock>winston>@dabh/diagnostics>colorspace>color>color-string"]}],"metadata":null,"vulnerable_versions":"<1.5.5","module_name":"color-string","severity":"moderate","github_advisory_id":"GHSA-257v-vj4p-3w2h","cves":["CVE-2021-29060"],"access":"public","patched_versions":">=1.5.5","updated":"2021-06-21T23:20:38.000Z","recommendation":"Upgrade to version 1.5.5 or later","cwe":"CWE-770","found_by":null,"deleted":null,"id":1002581,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-29060\n- https://github.com/advisories/GHSA-257v-vj4p-3w2h","created":"2021-10-07T07:31:50.534Z","reported_by":null,"title":"Regular Expression Denial of Service (ReDOS)","npm_advisory_id":null,"overview":"In the npm package `color-string`, there is a  ReDos (Regular Expression Denial of Service) vulnerability regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.","url":"https://github.com/advisories/GHSA-257v-vj4p-3w2h"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002584,"path":"striptags","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.1","paths":["striptags"]}],"metadata":null,"vulnerable_versions":"<3.2.0","module_name":"striptags","severity":"moderate","github_advisory_id":"GHSA-qxg5-2qff-p49r","cves":["CVE-2021-32696"],"access":"public","patched_versions":">=3.2.0","updated":"2021-06-18T19:31:22.000Z","recommendation":"Upgrade to version 3.2.0 or later","cwe":"CWE-79","found_by":null,"deleted":null,"id":1002584,"references":"- https://github.com/ericnorris/striptags/security/advisories/GHSA-qxg5-2qff-p49r\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32696\n- https://github.com/advisories/GHSA-qxg5-2qff-p49r","created":"2021-10-07T07:31:50.534Z","reported_by":null,"title":"Passing in a non-string 'html' argument can lead to unsanitized output","npm_advisory_id":null,"overview":"A type-confusion vulnerability can cause `striptags` to concatenate unsanitized strings when an array-like object is passed in as the `html` parameter. This can be abused by an attacker who can control the shape of their input, e.g. if query parameters are passed directly into the function.\n\n### Impact\n\nXSS\n\n### Patches\n\n`3.2.0`\n\n### Workarounds\n\nEnsure that the `html` parameter is a string before calling the function.\n","url":"https://github.com/advisories/GHSA-qxg5-2qff-p49r"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002635,"path":"@hmcts/media-viewer>socket.io-client>engine.io-client>ws","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"7.4.5","paths":["@hmcts/media-viewer>socket.io-client>engine.io-client>ws"]}],"metadata":null,"vulnerable_versions":">=7.0.0 <7.4.6","module_name":"ws","severity":"moderate","github_advisory_id":"GHSA-6fc8-4gx4-v693","cves":["CVE-2021-32640"],"access":"public","patched_versions":">=7.4.6","updated":"2021-06-01T20:54:10.000Z","recommendation":"Upgrade to version 7.4.6 or later","cwe":"CWE-345","found_by":null,"deleted":null,"id":1002635,"references":"- https://github.com/websockets/ws/security/advisories/GHSA-6fc8-4gx4-v693\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32640\n- https://github.com/advisories/GHSA-6fc8-4gx4-v693","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"ReDoS in Sec-Websocket-Protocol header","npm_advisory_id":null,"overview":"### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(/ *, */);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https://github.com/websockets/ws/commit/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https://github.com/websockets/ws/commit/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.\n","url":"https://github.com/advisories/GHSA-6fc8-4gx4-v693"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002693,"path":"@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>npm-package-arg>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.5","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>npm-package-arg>hosted-git-info"]}],"metadata":null,"vulnerable_versions":">=3.0.0 <3.0.8","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=3.0.8","updated":"2021-05-07T17:37:13.000Z","recommendation":"Upgrade to version 3.0.8 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002693,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002693,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>npm-package-arg>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.5","paths":["@hmcts/ccd-case-ui-toolkit>npm-registry-fetch>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>npm-registry-fetch>npm-package-arg>hosted-git-info"]}],"metadata":null,"vulnerable_versions":">=3.0.0 <3.0.8","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=3.0.8","updated":"2021-05-07T17:37:13.000Z","recommendation":"Upgrade to version 3.0.8 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002693,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002760,"path":"@hmcts/rpx-xui-node-lib>redis","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.2","paths":["@hmcts/rpx-xui-node-lib>redis"]}],"metadata":null,"vulnerable_versions":">=2.6.0 <3.1.1","module_name":"redis","severity":"low","github_advisory_id":"GHSA-35q2-47q7-3pc3","cves":["CVE-2021-29469"],"access":"public","patched_versions":">=3.1.1","updated":"2021-04-23T18:11:39.000Z","recommendation":"Upgrade to version 3.1.1 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002760,"references":"- https://github.com/NodeRedis/node-redis/security/advisories/GHSA-35q2-47q7-3pc3\n- https://nvd.nist.gov/vuln/detail/CVE-2021-29469\n- https://github.com/advisories/GHSA-35q2-47q7-3pc3","created":"2021-10-07T07:31:50.556Z","reported_by":null,"title":"Potential exponential regex in monitor mode","npm_advisory_id":null,"overview":"### Impact\nWhen a client is in monitoring mode, the regex begin used to detected monitor messages could cause exponential backtracking on some strings. This issue could lead to a denial of service.\n\n### Patches\nThe problem was fixed in commit [`2d11b6d`](https://github.com/NodeRedis/node-redis/commit/2d11b6dc9b9774464a91fb4b448bad8bf699629e) and was released in version `3.1.1`.\n\n### References\n#1569 (GHSL-2021-026)","url":"https://github.com/advisories/GHSA-35q2-47q7-3pc3"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002847,"path":"@hmcts/properties-volume>lodash","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.17.19","paths":["@hmcts/properties-volume>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lowdb>lodash"]}],"metadata":null,"vulnerable_versions":"<4.17.21","module_name":"lodash","severity":"high","github_advisory_id":"GHSA-35jh-r3h4-6jhm","cves":["CVE-2021-23337"],"access":"public","patched_versions":">=4.17.21","updated":"2021-03-31T23:59:26.000Z","recommendation":"Upgrade to version 4.17.21 or later","cwe":"CWE-77","found_by":null,"deleted":null,"id":1002847,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23337\n- https://github.com/advisories/GHSA-35jh-r3h4-6jhm","created":"2021-10-07T07:31:50.564Z","reported_by":null,"title":"Command Injection in lodash","npm_advisory_id":null,"overview":"`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.","url":"https://github.com/advisories/GHSA-35jh-r3h4-6jhm"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002847,"path":"@hmcts/ccd-case-ui-toolkit>json-server>lodash","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.17.19","paths":["@hmcts/properties-volume>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lowdb>lodash"]}],"metadata":null,"vulnerable_versions":"<4.17.21","module_name":"lodash","severity":"high","github_advisory_id":"GHSA-35jh-r3h4-6jhm","cves":["CVE-2021-23337"],"access":"public","patched_versions":">=4.17.21","updated":"2021-03-31T23:59:26.000Z","recommendation":"Upgrade to version 4.17.21 or later","cwe":"CWE-77","found_by":null,"deleted":null,"id":1002847,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23337\n- https://github.com/advisories/GHSA-35jh-r3h4-6jhm","created":"2021-10-07T07:31:50.564Z","reported_by":null,"title":"Command Injection in lodash","npm_advisory_id":null,"overview":"`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.","url":"https://github.com/advisories/GHSA-35jh-r3h4-6jhm"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002847,"path":"@hmcts/ccd-case-ui-toolkit>json-server>lowdb>lodash","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.17.19","paths":["@hmcts/properties-volume>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lodash","@hmcts/ccd-case-ui-toolkit>json-server>lowdb>lodash"]}],"metadata":null,"vulnerable_versions":"<4.17.21","module_name":"lodash","severity":"high","github_advisory_id":"GHSA-35jh-r3h4-6jhm","cves":["CVE-2021-23337"],"access":"public","patched_versions":">=4.17.21","updated":"2021-03-31T23:59:26.000Z","recommendation":"Upgrade to version 4.17.21 or later","cwe":"CWE-77","found_by":null,"deleted":null,"id":1002847,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23337\n- https://github.com/advisories/GHSA-35jh-r3h4-6jhm","created":"2021-10-07T07:31:50.564Z","reported_by":null,"title":"Command Injection in lodash","npm_advisory_id":null,"overview":"`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.","url":"https://github.com/advisories/GHSA-35jh-r3h4-6jhm"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002849,"path":"@hmcts/ccd-case-ui-toolkit>underscore","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.9.2","paths":["@hmcts/ccd-case-ui-toolkit>underscore"]}],"metadata":null,"vulnerable_versions":">=1.3.2 <1.12.1","module_name":"underscore","severity":"high","github_advisory_id":"GHSA-cf4h-3jhx-xvhq","cves":["CVE-2021-23358"],"access":"public","patched_versions":">=1.12.1","updated":"2021-03-31T21:59:01.000Z","recommendation":"Upgrade to version 1.12.1 or later","cwe":"CWE-94","found_by":null,"deleted":null,"id":1002849,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23358\n- https://github.com/advisories/GHSA-cf4h-3jhx-xvhq","created":"2021-10-07T07:31:50.564Z","reported_by":null,"title":"Arbitrary Code Execution in underscore","npm_advisory_id":null,"overview":"The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.","url":"https://github.com/advisories/GHSA-cf4h-3jhx-xvhq"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002401,"path":"@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>widest-line>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>npmlog>gauge>wide-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["@hmcts/ccd-case-ui-toolkit>json-server>yargs>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>update-notifier>boxen>ansi-align>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>cliui>strip-ansi>ansi-regex","mochawesome-report-generator>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>string-width>strip-ansi>ansi-regex","@hmcts/ccd-case-ui-toolkit>json-server>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]},{"version":"4.1.0","paths":["mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex","mochawesome>mochawesome-report-generator>yargs>string-width>strip-ansi>ansi-regex"]},{"version":"5.0.0","paths":["mochawesome>strip-ansi>ansi-regex","mochawesome-merge>yargs>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>string-width>strip-ansi>ansi-regex","mochawesome-merge>yargs>cliui>wrap-ansi>string-width>strip-ansi>ansi-regex"]}],"metadata":null,"vulnerable_versions":">2.1.1 <5.0.1","module_name":"ansi-regex","severity":"moderate","github_advisory_id":"GHSA-93q8-gq69-wqmw","cves":["CVE-2021-3807"],"access":"public","patched_versions":">=5.0.1","updated":"2021-09-23T15:45:50.000Z","recommendation":"Upgrade to version 5.0.1 or later","cwe":"CWE-918","found_by":null,"deleted":null,"id":1002401,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-3807\n- https://github.com/advisories/GHSA-93q8-gq69-wqmw","created":"2021-10-07T07:31:50.502Z","reported_by":null,"title":" Inefficient Regular Expression Complexity in chalk/ansi-regex","npm_advisory_id":null,"overview":"ansi-regex is vulnerable to Inefficient Regular Expression Complexity","url":"https://github.com/advisories/GHSA-93q8-gq69-wqmw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002503,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.4.13","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar"]}],"metadata":null,"vulnerable_versions":"<4.4.18","module_name":"tar","severity":"high","github_advisory_id":"GHSA-5955-9wpr-37jh","cves":["CVE-2021-37713"],"access":"public","patched_versions":">=4.4.18","updated":"2021-08-31T16:02:33.000Z","recommendation":"Upgrade to version 4.4.18 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002503,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-5955-9wpr-37jh\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37713\n- https://github.com/advisories/GHSA-5955-9wpr-37jh","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n","url":"https://github.com/advisories/GHSA-5955-9wpr-37jh"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002506,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.4.13","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar"]}],"metadata":null,"vulnerable_versions":"<4.4.18","module_name":"tar","severity":"high","github_advisory_id":"GHSA-qq89-hq3f-393p","cves":["CVE-2021-37712"],"access":"public","patched_versions":">=4.4.18","updated":"2021-08-31T16:02:05.000Z","recommendation":"Upgrade to version 4.4.18 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002506,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-qq89-hq3f-393p\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37712\n- https://github.com/advisories/GHSA-qq89-hq3f-393p","created":"2021-10-07T07:31:50.519Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n","url":"https://github.com/advisories/GHSA-qq89-hq3f-393p"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002509,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.4.13","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar"]}],"metadata":null,"vulnerable_versions":"<4.4.16","module_name":"tar","severity":"high","github_advisory_id":"GHSA-9r2w-394v-53qc","cves":["CVE-2021-37701"],"access":"public","patched_versions":">=4.4.16","updated":"2021-08-31T16:01:51.000Z","recommendation":"Upgrade to version 4.4.16 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002509,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-9r2w-394v-53qc\n- https://nvd.nist.gov/vuln/detail/CVE-2021-37701\n- https://github.com/advisories/GHSA-9r2w-394v-53qc","created":"2021-10-07T07:31:50.520Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.","url":"https://github.com/advisories/GHSA-9r2w-394v-53qc"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002541,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.4.13","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar"]}],"metadata":null,"vulnerable_versions":">=4.0.0 <4.4.14","module_name":"tar","severity":"high","github_advisory_id":"GHSA-3jfq-g458-7qm9","cves":["CVE-2021-32804"],"access":"public","patched_versions":">=4.4.14","updated":"2021-08-03T19:06:16.000Z","recommendation":"Upgrade to version 4.4.14 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002541,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-3jfq-g458-7qm9\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32804\n- https://github.com/advisories/GHSA-3jfq-g458-7qm9","created":"2021-10-07T07:31:50.525Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite due to insufficient absolute path sanitization","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-3jfq-g458-7qm9"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002545,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"4.4.13","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>tar"]}],"metadata":null,"vulnerable_versions":">=4.0.0 <4.4.15","module_name":"tar","severity":"high","github_advisory_id":"GHSA-r628-mhmh-qjhw","cves":["CVE-2021-32803"],"access":"public","patched_versions":">=4.4.15","updated":"2021-08-03T18:59:59.000Z","recommendation":"Upgrade to version 4.4.15 or later","cwe":"CWE-22","found_by":null,"deleted":null,"id":1002545,"references":"- https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw\n- https://nvd.nist.gov/vuln/detail/CVE-2021-32803\n- https://github.com/advisories/GHSA-r628-mhmh-qjhw","created":"2021-10-07T07:31:50.526Z","reported_by":null,"title":"Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning","npm_advisory_id":null,"overview":"### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) => {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.","url":"https://github.com/advisories/GHSA-r628-mhmh-qjhw"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002627,"path":"@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@angular-devkit/architect>@angular-devkit/core>chokidar>glob-parent","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/angular>@angular-devkit/schematics>@angular-devkit/core>chokidar>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>anymatch>micromatch>parse-glob>glob-base>glob-parent"]},{"version":"2.0.0","paths":["@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>chokidar>glob-parent"]},{"version":"5.1.1","paths":["accessibility-checker>chromedriver>del>globby>fast-glob>glob-parent"]}],"metadata":null,"vulnerable_versions":"<5.1.2","module_name":"glob-parent","severity":"high","github_advisory_id":"GHSA-ww39-953v-wcq6","cves":["CVE-2020-28469"],"access":"public","patched_versions":">=5.1.2","updated":"2021-06-04T18:30:46.000Z","recommendation":"Upgrade to version 5.1.2 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002627,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2020-28469\n- https://github.com/advisories/GHSA-ww39-953v-wcq6","created":"2021-10-07T07:31:50.540Z","reported_by":null,"title":"Regular expression denial of service","npm_advisory_id":null,"overview":"This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.","url":"https://github.com/advisories/GHSA-ww39-953v-wcq6"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002692,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>npm-package-arg>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.8.5","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>hosted-git-info"]}],"metadata":null,"vulnerable_versions":"<2.8.9","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=2.8.9","updated":"2021-05-07T17:39:04.000Z","recommendation":"Upgrade to version 2.8.9 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002692,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002692,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.8.5","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>hosted-git-info"]}],"metadata":null,"vulnerable_versions":"<2.8.9","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=2.8.9","updated":"2021-05-07T17:39:04.000Z","recommendation":"Upgrade to version 2.8.9 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002692,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002692,"path":"@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.8.5","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>hosted-git-info"]}],"metadata":null,"vulnerable_versions":"<2.8.9","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=2.8.9","updated":"2021-05-07T17:39:04.000Z","recommendation":"Upgrade to version 2.8.9 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002692,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1002692,"path":"@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>hosted-git-info","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"2.8.5","paths":["@hmcts/ccd-case-ui-toolkit>@angular/cli>npm-package-arg>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>pacote>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/cli>@schematics/update>npm-registry-client>normalize-package-data>hosted-git-info","@hmcts/ccd-case-ui-toolkit>@angular/compiler-cli>yargs>read-pkg-up>read-pkg>normalize-package-data>hosted-git-info"]}],"metadata":null,"vulnerable_versions":"<2.8.9","module_name":"hosted-git-info","severity":"moderate","github_advisory_id":"GHSA-43f8-2h32-f4cj","cves":["CVE-2021-23362"],"access":"public","patched_versions":">=2.8.9","updated":"2021-05-07T17:39:04.000Z","recommendation":"Upgrade to version 2.8.9 or later","cwe":"CWE-400","found_by":null,"deleted":null,"id":1002692,"references":"- https://nvd.nist.gov/vuln/detail/CVE-2021-23362\n- https://github.com/advisories/GHSA-43f8-2h32-f4cj","created":"2021-10-07T07:31:50.546Z","reported_by":null,"title":"Regular Expression Denial of Service in hosted-git-info","npm_advisory_id":null,"overview":"The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","url":"https://github.com/advisories/GHSA-43f8-2h32-f4cj"}}}
