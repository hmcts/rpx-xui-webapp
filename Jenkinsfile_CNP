#!groovy

properties([
    [
        $class       : 'GithubProjectProperty',
        displayName  : 'Expert UI Webapp',
        projectUrlStr: 'https://github.com/hmcts/rpx-xui-webapp/'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

// use Infrastructure branch in PR for long running FT's beyond 40mins for DEBUG only
// @Library("Infrastructure@fpl-long-ft-timeout")
@Library("Infrastructure")

import uk.gov.hmcts.contino.AppPipelineDsl

def type      = "nodejs"
def product   = "xui"
def component = "webapp"
def vault = "rpx"
def channel   = '#xui-pipeline'

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def branchesToSync = ['perftest', 'ithc']

def secrets = [
  'rpx-${env}': [
    secret('mc-s2s-client-secret', 'S2S_SECRET'),
    secret('mc-idam-client-secret', 'IDAM_SECRET'),
    secret('webapp-redis6-connection-string', 'REDISCLOUD_URL'),
    secret('test-email', 'TEST_EMAIL'),
    secret('test-password', 'TEST_PASSWORD'),
    secret('appinsights-instrumentationkey-mc', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
    secret('appinsights-connection-string-mc', 'APPINSIGHTS_CONNECTION_STRING'),
    secret('system-user-name', 'SYSTEM_USER_NAME'),
    secret('system-user-password', 'SYSTEM_USER_PASSWORD'),
    secret('launch-darkly-client-id', 'LAUNCH_DARKLY_CLIENT_ID'),
  ],
  ]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withPipeline(type, product, component) {

    enableSlackNotifications(channel)
    loadVaultSecrets(secrets)
    env.TEST_URL = 'https://manage-case.aat.platform.hmcts.net'
    enableAksStagingDeployment()
    disableLegacyDeployment()
    syncBranchesWithMaster(branchesToSync)

    enablePactAs([
        AppPipelineDsl.PactRoles.CONSUMER
    ])

    enableApiGatewayTest()

    afterSuccess('build') {
        yarnBuilder.yarn('build:dev')
        stage('Playwright Install') {
        try {
            yarnBuilder.yarn('test:setup:playwright-install')
        } catch (Error) {
            error(message: "${STAGE_NAME} is unstable: " + Error.toString())
        }  
    }    
    }

    afterSuccess('test') {

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/coverage/node",
            reportFiles          : "index.html",
            reportName           : "node coverage tests"
        ])

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/coverage/ng",
            reportFiles          : "index.html",
            reportName           : "ng coverage tests"
        ])

         publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/mutation/node/",
            reportFiles          : 'index.html',
            reportName           : 'XUI Manage Cases Mutation tests'
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/a11y/",
            reportFiles          : 'Report.html',
            reportName           : 'Manage Cases a11y Test Report'
        ])

    }

    afterSuccess('smoketest:demo') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/codecept-smoke",
            reportFiles          : 'cucumber_report.html',
            reportName           : 'DEMO Smoke Test'
        ])
    }

    afterSuccess('apiGatewayTest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/api_functional/",
            reportFiles          : 'mochawesome.html',
            reportName           : 'PREVIEW API Functional Test'
        ])
    }

    afterSuccess('smoketest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/codecept-smoke",
            reportFiles          : 'cucumber_report.html',
            reportName           : 'PREVIEW Smoke Test'
        ])
    }

    afterSuccess('functionalTest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/playwright-e2e/odhin-report/",
            reportFiles          : 'xui-playwright.html',
            reportName           : 'PREVIEW Playwright E2E'
        ])
    }

    afterSuccess('apiGatewayTest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/api_functional/",
            reportFiles          : 'mochawesome.html',
            reportName           : 'AAT API Functional Test'
        ])
    }

    afterSuccess('smoketest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/codecept-smoke",
            reportFiles          : 'cucumber_report.html',
            reportName           : 'AAT Smoke Test'
        ])
    }

    afterSuccess('functionalTest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "functional-output/tests/playwright-e2e/odhin-report/",
            reportFiles          : 'xui-playwright.html',
            reportName           : 'AAT Playwright E2E'
        ])
    }
}
