[{"__symbolic":"module","version":4,"metadata":{"CaseViewerComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"ccd-case-viewer","template":"\n    <div *ngIf=\"isDataLoaded()\">\n      <!-- Generic error heading and error message to be displayed only if there are no specific callback errors or warnings, or no error details -->\n      <div *ngIf=\"error && !(error.callbackErrors || error.callbackWarnings || error.details)\" class=\"error-summary\"\n           role=\"group\" aria-labelledby=\"edit-case-event_error-summary-heading\" tabindex=\"-1\">\n        <h1 class=\"heading-h1 error-summary-heading\" id=\"edit-case-event_error-summary-heading\">\n          Something went wrong\n        </h1>\n        <div class=\"govuk-error-summary__body\" id=\"edit-case-event_error-summary-body\">\n          <p>We're working to fix the problem. Try again shortly.</p>\n          <p><a href=\"get-help\" target=\"_blank\">Contact us</a> if you're still having problems.</p>\n        </div>\n      </div>\n      <!-- Callback error heading and error message to be displayed if there are specific error details -->\n      <div *ngIf=\"error && error.details\" class=\"error-summary\" role=\"group\"\n           aria-labelledby=\"edit-case-event_error-summary-heading\" tabindex=\"-1\">\n        <h2 class=\"heading-h2 error-summary-heading\" id=\"edit-case-event_error-summary-heading\">\n          The callback data failed validation\n        </h2>\n        <p>{{error.message}}</p>\n        <ul *ngIf=\"error.details?.field_errors\" class=\"error-summary-list\">\n          <li *ngFor=\"let fieldError of error.details.field_errors\">\n            {{fieldError.message}}\n          </li>\n        </ul>\n      </div>\n      <ccd-callback-errors\n        [triggerTextContinue]=\"triggerTextStart\"\n        [triggerTextIgnore]=\"triggerTextIgnoreWarnings\"\n        [callbackErrorsSubject]=\"callbackErrorsSubject\"\n        (callbackErrorsContext)=\"callbackErrorsNotify($event)\">\n      </ccd-callback-errors>\n      <ccd-activity [caseId]=\"caseDetails.case_id\" [displayMode]=\"BANNER\"></ccd-activity>\n      <div class=\"grid-row\">\n        <div class=\"column-one-half\">\n          <ccd-case-header [caseDetails]=\"caseDetails\"></ccd-case-header>\n          <div class=\"case-viewer-controls\" *ngIf=\"hasPrint && !isDraft() && isPrintEnabled()\">\n            <a id=\"case-viewer-control-print\" routerLink=\"print\" class=\"button button-secondary\">Print</a>\n          </div>\n        </div>\n        <div *ngIf=\"hasEventSelector\" class=\"column-one-half\">\n          <ccd-event-trigger [isDisabled]=\"isTriggerButtonDisabled()\" [triggers]=\"caseDetails.triggers\"\n                             [triggerText]=\"triggerText\" (onTriggerChange)=\"clearErrorsAndWarnings()\"\n                             (onTriggerSubmit)=\"applyTrigger($event)\"></ccd-event-trigger>\n        </div>\n      </div>\n      <div class=\"grid-row\">\n        <div class=\"column-full\">\n          <ng-container *ngIf=\"hasTabsPresent()\">\n            <mat-tab-group #tabGroup animationDuration=\"0ms\" (selectedTabChange)=\"tabChanged($event)\"\n                           [disableRipple]=\"true\">\n              <mat-tab *ngFor=\"let tab of sortedTabs; let curIdx=index\" [id]=\"tab.id\" [label]=\"tab.label\">\n                <ng-template matTabContent>\n                  <table [class]=\"tab.id\">\n                    <tbody>\n                    <ng-container *ngFor=\"let field of tab | ccdTabFields | ccdReadFieldsFilter:false :undefined :true :formGroup.controls['data']\">\n                      <div ccdLabelSubstitutor [caseField]=\"field\" [contextFields]=\"caseFields\" [hidden]=\"field.hidden\">\n                        <ng-container [ngSwitch]=\"!(field | ccdIsCompound)\">\n                          <tr *ngSwitchCase=\"true\">\n                            <th>\n                              <div class=\"case-viewer-label text-16\">{{field.label}}</div>\n                            </th>\n                            <td>\n                              <span class=\"text-16\">\n                                <ccd-field-read [topLevelFormGroup]=\"formGroup.controls['data']\"\n                                  [caseField]=\"field\" [caseReference]=\"caseDetails.case_id\">\n                                </ccd-field-read>\n                              </span>\n                            </td>\n                          </tr>\n                          <tr *ngSwitchCase=\"false\" class=\"compound-field\">\n                            <th>\n                              <span class=\"text-16\">\n                                <ccd-field-read [topLevelFormGroup]=\"formGroup.controls['data']\"\n                                  [caseField]=\"field\" [caseReference]=\"caseDetails.case_id\">\n                                </ccd-field-read>\n                              </span>\n                            </th>\n                          </tr>\n                        </ng-container>\n                      </div>\n                    </ng-container>\n                    </tbody>\n                  </table>\n                </ng-template>\n              </mat-tab>\n            </mat-tab-group>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n    th{width:1%;white-space:nowrap;vertical-align:top}.compound-field th{padding:0}.case-viewer-controls{margin-top:47px;margin-bottom:20px}ccd-case-header{float:left;margin-right:10px}ccd-event-trigger{float:right}.case-viewer-label{min-width:300px;white-space:normal}.markdown h3{margin-bottom:0px}\n  "]}]}],"members":{"hasPrint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":138,"character":3}}]}],"hasEventSelector":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":140,"character":3}}]}],"tabGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":160,"character":3},"arguments":["tabGroup"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":163,"character":29},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":164,"character":28},{"__symbolic":"reference","module":"../../services","name":"NavigationNotifierService","line":165,"character":48},{"__symbolic":"reference","module":"../../services","name":"OrderService","line":166,"character":35},{"__symbolic":"reference","module":"../../services","name":"ActivityPollingService","line":167,"character":45},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":168,"character":29},{"__symbolic":"reference","module":"../../services","name":"AlertService","line":169,"character":35},{"__symbolic":"reference","module":"../../services","name":"DraftService","line":170,"character":35},{"__symbolic":"reference","module":"../case-editor","name":"CaseNotifier","line":171,"character":35},{"__symbolic":"reference","module":"../../services","name":"ErrorNotifierService","line":172,"character":43},{"__symbolic":"reference","module":"@angular/common","name":"Location","line":173,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"isPrintEnabled":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"postViewActivity":[{"__symbolic":"method"}],"clearErrorsAndWarnings":[{"__symbolic":"method"}],"applyTrigger":[{"__symbolic":"method"}],"isDataLoaded":[{"__symbolic":"method"}],"hasTabsPresent":[{"__symbolic":"method"}],"callbackErrorsNotify":[{"__symbolic":"method"}],"isDraft":[{"__symbolic":"method"}],"isTriggerButtonDisabled":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"tabChanged":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"sortTabFieldsAndFilterTabs":[{"__symbolic":"method"}],"getTabFields":[{"__symbolic":"method"}],"buildFormGroup":[{"__symbolic":"method"}],"initDialog":[{"__symbolic":"method"}],"resetErrors":[{"__symbolic":"method"}]},"statics":{"ORIGIN_QUERY_PARAM":"origin","TRIGGER_TEXT_START":"Go","TRIGGER_TEXT_CONTINUE":"Ignore Warning and Go","space":"%20"}}}}]