import { CaseEventTrigger } from '../domain/case-view/case-event-trigger.model';
import { FieldType, FieldTypeEnum } from '../domain';
import { ComplexFieldOverride } from '../components/case-editor/domain/wizard-page-field-complex-override.model';
import { WizardPage, WizardPageField } from '../components/case-editor/domain';
import { ShowCondition } from '../directives/conditional-show/domain';
import { CaseField, FixedListItem } from '../domain/definition';
import { AccessControlList } from '../domain/definition/access-control-list.model';
import { CaseFieldBuilder } from './case-field-builder';
export declare const createCaseEventTrigger: (id: string, name: string, case_id: string, show_summary: boolean, case_fields: CaseField[], wizard_pages?: any[], can_save_draft?: boolean) => CaseEventTrigger;
export declare const aCaseField: (id: string, label: string, type: FieldTypeEnum, display_context: string, show_summary_content_option: number, typeComplexFields?: CaseField[], retain_hidden_value?: boolean, hidden?: boolean) => CaseField;
export declare const createWizardPage: (id: string, label: string, order: number, wizardPageFields: WizardPageField[], caseFields: CaseField[], showCondition: string, parsedShowCondition?: ShowCondition) => WizardPage;
export declare const createWizardPageField: (id: string, order: number, pageColumnNumber: number, complexFieldOverrides?: ComplexFieldOverride[]) => WizardPageField;
export declare const createComplexFieldOverride: (id: string, order: number, displayContext: string, label: string, hint: string, showCondition: string) => ComplexFieldOverride;
export declare const createHiddenComplexFieldOverride: (id: string) => ComplexFieldOverride;
export declare const createCaseField: (id: string, label: string, hint: string, fieldType: FieldType, display_context: string, order?: any, show_condition?: any, ACLs?: AccessControlList[], hidden?: boolean) => CaseField;
export declare const newCaseField: (id: string, label: string, hint: string, fieldType: FieldType, display_context: string, order?: any) => CaseFieldBuilder;
export declare const createFieldType: (typeId: string, type: FieldTypeEnum, complex_fields?: CaseField[], collection_field_type?: FieldType) => FieldType;
export declare const createFixedListFieldType: (typeId: string, fixedListItems?: FixedListItem[]) => FieldType;
export declare const createMultiSelectListFieldType: (typeId: string, fixedListItems?: FixedListItem[]) => FieldType;
export declare const textFieldType: () => FieldType;
export declare const createACL: (role: string, create: boolean, read: boolean, update: boolean, _delete: boolean) => AccessControlList;
