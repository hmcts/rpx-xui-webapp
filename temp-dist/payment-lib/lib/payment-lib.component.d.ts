import { ChangeDetectorRef, OnInit } from '@angular/core';
import { PaymentLibService } from './payment-lib.service';
import { IBSPayments } from './interfaces/IBSPayments';
import { OrderslistService } from './services/orderslist.service';
import { IPayment } from './interfaces/IPayment';
import * as i0 from "@angular/core";
export declare class PaymentLibComponent implements OnInit {
    private paymentLibService;
    private cd;
    private OrderslistService;
    API_ROOT: string;
    BULKSCAN_API_ROOT: string;
    REFUNDS_API_ROOT: string;
    NOTIFICATION_API_ROOT: string;
    CARDPAYMENTRETURNURL: string;
    CCD_CASE_NUMBER: string;
    EXC_REFERENCE: string;
    PAYMENT_METHOD: string;
    VIEW: string;
    VIEWSERVICE: string;
    PAYMENT_GROUP_REF?: string;
    TAKEPAYMENT: boolean;
    SERVICEREQUEST: string;
    DCN_NUMBER: string;
    SELECTED_OPTION: string;
    ISBSENABLE: Boolean;
    ISSFENABLE: boolean;
    ISTURNOFF: boolean;
    CASETYPE: string;
    ISPAYMENTSTATUSENABLED: boolean;
    rootUrl: boolean;
    REFUNDLIST: string;
    USERID: string;
    LOGGEDINUSERROLES: any[];
    LOGGEDINUSEREMAIL: string;
    isFromServiceRequestPage: boolean;
    paymentMethod: string;
    bspaymentdcn: string;
    unProcessedPaymentServiceId: string;
    paymentGroupReference: string;
    paymentReference: string;
    refundReference: string;
    isFromPayBubble: boolean;
    refundlistsource: any;
    viewName: string;
    isTurnOff: boolean;
    caseType: string;
    unProcessedPayment: IBSPayments;
    isRefundStatusView: boolean;
    isRedirectFromCaseTransactionPage: string;
    isCallFromRefundList: boolean;
    isFromRefundStatusPage: boolean;
    iscancelClicked: boolean;
    isFromPaymentDetailPage: boolean;
    pbaPayOrderRef: IPayment;
    isTakePayment: boolean;
    orderDetail: any[];
    orderRef: string;
    orderStatus: string;
    orderParty: string;
    orderCreated: Date;
    orderCCDEvent: string;
    serviceRequestValue: string;
    orderAddBtnEnable: boolean;
    orderFeesTotal: number;
    orderRemissionTotal: number;
    orderTotalPayments: number;
    orderPendingPayments: number;
    constructor(paymentLibService: PaymentLibService, cd: ChangeDetectorRef, OrderslistService: OrderslistService);
    ngAfterContentChecked(): void;
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PaymentLibComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PaymentLibComponent, "ccpay-payment-lib", never, { "API_ROOT": { "alias": "API_ROOT"; "required": false; }; "BULKSCAN_API_ROOT": { "alias": "BULKSCAN_API_ROOT"; "required": false; }; "REFUNDS_API_ROOT": { "alias": "REFUNDS_API_ROOT"; "required": false; }; "NOTIFICATION_API_ROOT": { "alias": "NOTIFICATION_API_ROOT"; "required": false; }; "CARDPAYMENTRETURNURL": { "alias": "CARDPAYMENTRETURNURL"; "required": false; }; "CCD_CASE_NUMBER": { "alias": "CCD_CASE_NUMBER"; "required": false; }; "EXC_REFERENCE": { "alias": "EXC_REFERENCE"; "required": false; }; "PAYMENT_METHOD": { "alias": "PAYMENT_METHOD"; "required": false; }; "VIEW": { "alias": "VIEW"; "required": false; }; "VIEWSERVICE": { "alias": "VIEWSERVICE"; "required": false; }; "PAYMENT_GROUP_REF": { "alias": "PAYMENT_GROUP_REF"; "required": false; }; "TAKEPAYMENT": { "alias": "TAKEPAYMENT"; "required": false; }; "SERVICEREQUEST": { "alias": "SERVICEREQUEST"; "required": false; }; "DCN_NUMBER": { "alias": "DCN_NUMBER"; "required": false; }; "SELECTED_OPTION": { "alias": "SELECTED_OPTION"; "required": false; }; "ISBSENABLE": { "alias": "ISBSENABLE"; "required": false; }; "ISSFENABLE": { "alias": "ISSFENABLE"; "required": false; }; "ISTURNOFF": { "alias": "ISTURNOFF"; "required": false; }; "CASETYPE": { "alias": "CASETYPE"; "required": false; }; "ISPAYMENTSTATUSENABLED": { "alias": "ISPAYMENTSTATUSENABLED"; "required": false; }; "rootUrl": { "alias": "rootUrl"; "required": false; }; "REFUNDLIST": { "alias": "REFUNDLIST"; "required": false; }; "USERID": { "alias": "USERID"; "required": false; }; "LOGGEDINUSERROLES": { "alias": "LOGGEDINUSERROLES"; "required": false; }; "LOGGEDINUSEREMAIL": { "alias": "LOGGEDINUSEREMAIL"; "required": false; }; "isFromServiceRequestPage": { "alias": "isFromServiceRequestPage"; "required": false; }; }, {}, never, never, false, never>;
}
//# sourceMappingURL=payment-lib.component.d.ts.map