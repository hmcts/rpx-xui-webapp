export class AllocatePaymentRequest {
    amount;
    banked_date;
    ccd_case_number;
    exception_record;
    currency;
    document_control_number;
    external_provider;
    giro_slip_no;
    payer_name;
    payment_channel;
    payment_status;
    payment_method;
    case_type;
    payment_allocation_dto;
    constructor(ccd_case_number, unAllocatedPayment, caseType, exceptionRecord, allocatedRequest) {
        this.amount = unAllocatedPayment.amount;
        this.banked_date = unAllocatedPayment.date_banked;
        this.ccd_case_number = ccd_case_number;
        this.exception_record = exceptionRecord;
        this.currency = unAllocatedPayment.currency;
        this.document_control_number = unAllocatedPayment.dcn_reference;
        this.external_provider = 'exela';
        this.giro_slip_no = unAllocatedPayment.bgc_reference;
        this.payer_name = unAllocatedPayment.payer_name;
        this.payment_channel = {
            description: '',
            name: 'bulk scan'
        };
        this.payment_status = {
            description: 'bulk scan payment completed',
            name: 'success'
        };
        this.payment_method = unAllocatedPayment.payment_method;
        this.case_type = caseType;
        if (allocatedRequest) {
            this.payment_allocation_dto = allocatedRequest;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxsb2NhdGVQYXltZW50UmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BheW1lbnQtbGliL3NyYy9saWIvaW50ZXJmYWNlcy9BbGxvY2F0ZVBheW1lbnRSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsTUFBTSxDQUFTO0lBQ2YsV0FBVyxDQUFTO0lBQ3BCLGVBQWUsQ0FBUztJQUN4QixnQkFBZ0IsQ0FBUztJQUN6QixRQUFRLENBQVM7SUFDakIsdUJBQXVCLENBQVM7SUFDaEMsaUJBQWlCLENBQVM7SUFDMUIsWUFBWSxDQUFTO0lBQ3JCLFVBQVUsQ0FBUztJQUNuQixlQUFlLENBQVM7SUFDeEIsY0FBYyxDQUFTO0lBQ3ZCLGNBQWMsQ0FBUztJQUN2QixTQUFTLENBQVM7SUFDbEIsc0JBQXNCLENBYXJCO0lBRUQsWUFBWSxlQUF3QixFQUFFLGtCQUErQixFQUFFLFFBQWdCLEVBQUUsZUFBdUIsRUFBRSxnQkFBc0I7UUFDdEksSUFBSSxDQUFDLE1BQU0sR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLENBQUM7UUFDeEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQyxXQUFXLENBQUM7UUFDbEQsSUFBSSxDQUFDLGVBQWUsR0FBRyxlQUFlLENBQUM7UUFDdkMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztRQUN4QyxJQUFJLENBQUMsUUFBUSxHQUFFLGtCQUFrQixDQUFDLFFBQVEsQ0FBQztRQUMzQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsa0JBQWtCLENBQUMsYUFBYSxDQUFDO1FBQ2hFLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxPQUFPLENBQUM7UUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxrQkFBa0IsQ0FBQyxhQUFhLENBQUM7UUFDckQsSUFBSSxDQUFDLFVBQVUsR0FBRyxrQkFBa0IsQ0FBQyxVQUFVLENBQUM7UUFDaEQsSUFBSSxDQUFDLGVBQWUsR0FBRztZQUNyQixXQUFXLEVBQUUsRUFBRTtZQUNmLElBQUksRUFBRSxXQUFXO1NBQ2xCLENBQUM7UUFDRixJQUFJLENBQUMsY0FBYyxHQUFFO1lBQ25CLFdBQVcsRUFBRSw2QkFBNkI7WUFDMUMsSUFBSSxFQUFFLFNBQVM7U0FDaEIsQ0FBQTtRQUNELElBQUksQ0FBQyxjQUFjLEdBQUcsa0JBQWtCLENBQUMsY0FBYyxDQUFDO1FBQ3hELElBQUksQ0FBQyxTQUFTLEdBQUUsUUFBUSxDQUFDO1FBQ3pCLElBQUcsZ0JBQWdCLEVBQUU7WUFDbkIsSUFBSSxDQUFDLHNCQUFzQixHQUFHLGdCQUFnQixDQUFDO1NBQ2hEO0lBRUgsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUJTUGF5bWVudHMgfSBmcm9tIFwiLi9JQlNQYXltZW50c1wiO1xuXG5leHBvcnQgY2xhc3MgQWxsb2NhdGVQYXltZW50UmVxdWVzdCB7XG4gIGFtb3VudDogTnVtYmVyO1xuICBiYW5rZWRfZGF0ZTogU3RyaW5nO1xuICBjY2RfY2FzZV9udW1iZXI6IFN0cmluZztcbiAgZXhjZXB0aW9uX3JlY29yZDogc3RyaW5nO1xuICBjdXJyZW5jeTogU3RyaW5nO1xuICBkb2N1bWVudF9jb250cm9sX251bWJlcjogU3RyaW5nO1xuICBleHRlcm5hbF9wcm92aWRlcjogU3RyaW5nO1xuICBnaXJvX3NsaXBfbm86IFN0cmluZztcbiAgcGF5ZXJfbmFtZTogU3RyaW5nO1xuICBwYXltZW50X2NoYW5uZWw6IE9iamVjdDtcbiAgcGF5bWVudF9zdGF0dXM6IE9iamVjdDtcbiAgcGF5bWVudF9tZXRob2Q6IFN0cmluZztcbiAgY2FzZV90eXBlOiBTdHJpbmc7XG4gIHBheW1lbnRfYWxsb2NhdGlvbl9kdG8/OiB7XG4gICAgYWxsb2NhdGlvbl9yZWFzb246IFN0cmluZyxcbiAgICBhbGxvY2F0aW9uX3N0YXR1czogU3RyaW5nLFxuICAgIGV4cGxhbmF0aW9uOiBTdHJpbmcsXG4gICAgcGF5bWVudF9hbGxvY2F0aW9uX3N0YXR1czogT2JqZWN0LFxuICAgIHBheW1lbnRfZ3JvdXBfcmVmZXJlbmNlOiBTdHJpbmcsXG4gICAgcGF5bWVudF9yZWZlcmVuY2U6IFN0cmluZyxcbiAgICByZWFzb246IFN0cmluZyxcbiAgICByZWNlaXZpbmdfb2ZmaWNlOiBTdHJpbmcsXG4gICAgdW5pZGVudGlmaWVkX3JlYXNvbjogU3RyaW5nLFxuICAgIHVzZXJfaWQ6IFN0cmluZyxcbiAgICB1c2VyX25hbWU6IFN0cmluZyxcbiAgICBjYXNlX3R5cGU6IFN0cmluZ1xuICB9XG5cbiAgY29uc3RydWN0b3IoY2NkX2Nhc2VfbnVtYmVyIDogc3RyaW5nLCB1bkFsbG9jYXRlZFBheW1lbnQ6IElCU1BheW1lbnRzLCBjYXNlVHlwZTogc3RyaW5nLCBleGNlcHRpb25SZWNvcmQ6IHN0cmluZywgYWxsb2NhdGVkUmVxdWVzdD86IGFueSkge1xuICAgIHRoaXMuYW1vdW50ID0gdW5BbGxvY2F0ZWRQYXltZW50LmFtb3VudDtcbiAgICB0aGlzLmJhbmtlZF9kYXRlID0gdW5BbGxvY2F0ZWRQYXltZW50LmRhdGVfYmFua2VkO1xuICAgIHRoaXMuY2NkX2Nhc2VfbnVtYmVyID0gY2NkX2Nhc2VfbnVtYmVyO1xuICAgIHRoaXMuZXhjZXB0aW9uX3JlY29yZCA9IGV4Y2VwdGlvblJlY29yZDtcbiAgICB0aGlzLmN1cnJlbmN5PSB1bkFsbG9jYXRlZFBheW1lbnQuY3VycmVuY3k7XG4gICAgdGhpcy5kb2N1bWVudF9jb250cm9sX251bWJlciA9IHVuQWxsb2NhdGVkUGF5bWVudC5kY25fcmVmZXJlbmNlO1xuICAgIHRoaXMuZXh0ZXJuYWxfcHJvdmlkZXIgPSAnZXhlbGEnO1xuICAgIHRoaXMuZ2lyb19zbGlwX25vID0gdW5BbGxvY2F0ZWRQYXltZW50LmJnY19yZWZlcmVuY2U7XG4gICAgdGhpcy5wYXllcl9uYW1lID0gdW5BbGxvY2F0ZWRQYXltZW50LnBheWVyX25hbWU7XG4gICAgdGhpcy5wYXltZW50X2NoYW5uZWwgPSB7XG4gICAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgICBuYW1lOiAnYnVsayBzY2FuJ1xuICAgIH07XG4gICAgdGhpcy5wYXltZW50X3N0YXR1cyA9e1xuICAgICAgZGVzY3JpcHRpb246ICdidWxrIHNjYW4gcGF5bWVudCBjb21wbGV0ZWQnLFxuICAgICAgbmFtZTogJ3N1Y2Nlc3MnXG4gICAgfVxuICAgIHRoaXMucGF5bWVudF9tZXRob2QgPSB1bkFsbG9jYXRlZFBheW1lbnQucGF5bWVudF9tZXRob2Q7XG4gICAgdGhpcy5jYXNlX3R5cGU9IGNhc2VUeXBlO1xuICAgIGlmKGFsbG9jYXRlZFJlcXVlc3QpIHtcbiAgICAgIHRoaXMucGF5bWVudF9hbGxvY2F0aW9uX2R0byA9IGFsbG9jYXRlZFJlcXVlc3Q7XG4gICAgfVxuXG4gIH1cbn1cbiJdfQ==