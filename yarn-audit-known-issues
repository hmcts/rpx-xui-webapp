{"type":"auditAdvisory","data":{"resolution":{"id":1748,"path":"accessibility-checker>puppeteer>ws","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"7.4.5","paths":["@hmcts/media-viewer>socket.io-client>engine.io-client>ws"]},{"version":"6.2.1","paths":["accessibility-checker>puppeteer>ws"]}],"id":1748,"created":"2021-05-28T19:31:06.490Z","updated":"2021-06-10T23:01:46.443Z","deleted":null,"title":"Regular Expression Denial of Service","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"ws","cves":["CVE-2021-32640"],"vulnerable_versions":">=5.0.0 <5.2.3 || >=6.0.0 <6.2.2 || >=7.0.0 <7.4.6","patched_versions":">=5.2.3 <6.0.0 || >=6.2.2 <7.0.0 || >=7.4.6","overview":"In `ws` before versions 5.2.3, 6.2.2 and 7.4.6 there is a ReDOS vulnerability.\n\n### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(/ *, */);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.\n","recommendation":"Upgrade to version 5.2.3 or 6.2.2 or 7.4.6 or later","references":"- [CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-32640)\n- [GitHub Advisory](https://github.com/advisories/GHSA-6fc8-4gx4-v693)","access":"public","severity":"moderate","cwe":"CWE-400","metadata":{"module_type":"","exploitability":5,"affected_components":""},"url":"https://npmjs.com/advisories/1748"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1767,"path":"xlsx","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"0.15.4","paths":["xlsx"]}],"id":1767,"created":"2021-07-22T19:54:07.912Z","updated":"2021-07-22T19:54:18.553Z","deleted":null,"title":"Denial of Service","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"xlsx","cves":["CVE-2021-32014"],"vulnerable_versions":"<0.17.0","patched_versions":">=0.17.0","overview":"SheetJS Pro through 0.16.9 allows attackers to cause a denial of service (CPU consumption) via a crafted .xlsx document that is mishandled when read by xlsx.js.","recommendation":"Upgrade to version 0.17.0 or later","references":"- [GitHub Advisory](https://github.com/advisories/GHSA-8vcr-vxm8-293m)\n- [CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-32014)\n","access":"public","severity":"moderate","cwe":"CWE-400","metadata":{"module_type":"","exploitability":5,"affected_components":""},"url":"https://npmjs.com/advisories/1767"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1662,"path":"@hmcts/rpx-xui-node-lib>redis","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.0.2","paths":["@hmcts/rpx-xui-node-lib>redis"]}],"id":1662,"created":"2021-05-04T03:47:22.289Z","updated":"2021-05-04T18:21:16.103Z","deleted":null,"title":"Regular Expression Denial of Service","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"redis","cves":["CVE-2021-29469"],"vulnerable_versions":">=2.6.0 <3.1.1","patched_versions":">=3.1.1","overview":"In `redis` before version 3.1.1, when a client is in monitoring mode, the regex begin used to detected monitor messages could cause exponential backtracking on some strings. This issue could lead to a denial of service.\n\n### Patches\nThe problem was fixed in commit [`2d11b6d`](https://github.com/NodeRedis/node-redis/commit/2d11b6dc9b9774464a91fb4b448bad8bf699629e) and was released in version `3.1.1`.","recommendation":"Upgrade to version 3.1.1 or later","references":"[CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-29469)\n[GitHub Advisory](https://github.com/advisories/GHSA-35q2-47q7-3pc3)\n","access":"public","severity":"low","cwe":"CWE-400","metadata":{"module_type":"","exploitability":3,"affected_components":""},"url":"https://npmjs.com/advisories/1662"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1674,"path":"@hmcts/ccd-case-ui-toolkit>underscore","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"1.9.2","paths":["@hmcts/ccd-case-ui-toolkit>underscore"]}],"id":1674,"created":"2021-05-06T16:14:45.792Z","updated":"2021-05-06T16:26:42.768Z","deleted":null,"title":"Arbitrary Code Execution","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"underscore","cves":["CVE-2021-23358"],"vulnerable_versions":">=1.3.2 <1.12.1","patched_versions":">=1.12.1","overview":"The package `underscore` from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Execution via the template function, particularly when a variable property is passed as an argument as it is not sanitized.","recommendation":"Upgrade to versions 1.12.1 or 1.13.0-2 or later","references":"- [CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-23358)\n- [GitHub Advisory](https://github.com/advisories/GHSA-cf4h-3jhx-xvhq)\n","access":"public","severity":"high","cwe":"CWE-94","metadata":{"module_type":"","exploitability":7,"affected_components":""},"url":"https://npmjs.com/advisories/1674"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1748,"path":"@hmcts/media-viewer>socket.io-client>engine.io-client>ws","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"7.4.5","paths":["@hmcts/media-viewer>socket.io-client>engine.io-client>ws"]},{"version":"6.2.1","paths":["accessibility-checker>puppeteer>ws"]}],"id":1748,"created":"2021-05-28T19:31:06.490Z","updated":"2021-06-10T23:01:46.443Z","deleted":null,"title":"Regular Expression Denial of Service","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"ws","cves":["CVE-2021-32640"],"vulnerable_versions":">=5.0.0 <5.2.3 || >=6.0.0 <6.2.2 || >=7.0.0 <7.4.6","patched_versions":">=5.2.3 <6.0.0 || >=6.2.2 <7.0.0 || >=7.4.6","overview":"In `ws` before versions 5.2.3, 6.2.2 and 7.4.6 there is a ReDOS vulnerability.\n\n### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(/ *, */);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.\n","recommendation":"Upgrade to version 5.2.3 or 6.2.2 or 7.4.6 or later","references":"- [CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-32640)\n- [GitHub Advisory](https://github.com/advisories/GHSA-6fc8-4gx4-v693)","access":"public","severity":"moderate","cwe":"CWE-400","metadata":{"module_type":"","exploitability":5,"affected_components":""},"url":"https://npmjs.com/advisories/1748"}}}
{"type":"auditAdvisory","data":{"resolution":{"id":1758,"path":"striptags","dev":false,"optional":false,"bundled":false},"advisory":{"findings":[{"version":"3.1.1","paths":["striptags"]}],"id":1758,"created":"2021-06-21T17:00:57.861Z","updated":"2021-06-21T17:02:05.003Z","deleted":null,"title":"Sanitization Bypass","found_by":{"link":"","name":"Anonymous","email":""},"reported_by":{"link":"","name":"Anonymous","email":""},"module_name":"striptags","cves":["CVE-2021-32696"],"vulnerable_versions":"<3.2.0","patched_versions":">=3.2.0","overview":"A type-confusion vulnerability can cause `striptags` to concatenate unsanitized strings when an array-like object is passed in as the `html` parameter. This can be abused by an attacker who can control the shape of their input, e.g. if query parameters are passed directly into the function.\n\n### Impact\n\nXSS\n\n### Workarounds\n\nEnsure that the `html` parameter is a string before calling the function.\n","recommendation":"Upgrade to version 3.2.0 or later","references":"- [CVE](https://nvd.nist.gov/vuln/detail/CVE-2021-32696)\n- [GitHub Advisory](https://github.com/advisories/GHSA-qxg5-2qff-p49r)\n","access":"public","severity":"moderate","cwe":"CWE-79","metadata":{"module_type":"","exploitability":5,"affected_components":""},"url":"https://npmjs.com/advisories/1758"}}}
