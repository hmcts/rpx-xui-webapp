#!groovy

properties([
    [
        $class       : 'GithubProjectProperty',
        displayName  : 'Expert UI Webapp',
        projectUrlStr: 'https://github.com/hmcts/rpx-xui-webapp/'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ]),
    parameters([
        choice(name: 'ENVIRONMENT', choices: 'saat\nsandbox\nsprod', description: 'Environment where code should be build and deployed')
    ])
])

@Library("Infrastructure")

def type      = "nodejs"
def product   = "xui"
def component = "webapp"
def vault     = "rpx"
def channel   = '#xui-pipeline'

List<LinkedHashMap<String, Object>> secrets = [
  secret('mc-s2s-client-secret',                 'S2S_SECRET'),
  secret('mc-idam-client-secret',              'IDAM_SECRET'),
  secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withParameterizedPipeline(type, product, component, params.ENVIRONMENT, 'sandbox') {
  enableSlackNotifications(channel)
  enableDockerBuild()
  loadVaultSecrets(secrets)
  setVaultName(vault)
  installCharts()


    after('checkout') {sh 'yarn cache clean'}

    after('build') {
        sh 'npm run build'

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/lint/node/",
            reportFiles          : 'index.html',
            reportName           : 'node lint Report'
        ])

        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/lint/ng/",
            reportFiles          : 'index.html',
            reportName           : 'ng lint Report'
        ])
    }

    after('test') {

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/tests/unit/node",
            reportFiles          : "index.html",
            reportName           : "node unit tests"
        ])

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/tests/unit/ng",
            reportFiles          : "index.html",
            reportName           : "ng unit Tests"
        ])

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/tests/coverage/node",
            reportFiles          : "index.html",
            reportName           : "node coverage tests"
        ])

        publishHTML ( [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/coverage/ng",
            reportFiles          : "index.html",
            reportName           : "ng coverage tests"
        ])

    }

    after('functionalTest:demo') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "reports/tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'DEMO Functional Test'
        ])
    }

    after('smoketest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/smoke_tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'PREVIEW Smoke Test'
        ])
    }

    after('functionalTest:preview') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'PREVIEW Functional Test'
        ])
    }

    after('smoketest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/smoke_tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'AAT Smoke Test'
        ])
    }

    after('functionalTest:aat') {
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'AAT Functional Test'
        ])
    }

    after('smoketest:prod'){
        publishHTML([
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "test/reports/smoke_tests/functional/",
            reportFiles          : 'index.html',
            reportName           : 'PROD Smoke Test'
        ])
    }

}
