[{"__symbolic":"module","version":4,"metadata":{"CaseEditFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"ccd-case-edit-form","template":"\n    <ng-container ccdConditionalShowForm [formGroup]=\"formGroup\" [caseFields]=\"fields\" [contextFields]=\"caseFields\"\n                  *ngFor=\"let field of fields\">\n      <div ccdLabelSubstitutor\n           [caseField]=\"field\" [formGroup]=\"formGroup\" [contextFields]=\"caseFields\">\n        <ng-container [ngSwitch]=\"field | ccdIsReadOnlyAndNotCollection \">\n          <ccd-field-read *ngSwitchCase=\"true\" [caseField]=\"field\" [caseFields]=\"caseFields\" [withLabel]=\"true\"\n                          [formGroup]=\"formGroup\"></ccd-field-read>\n          <ng-container *ngSwitchCase=\"false\">\n            <ng-container *ngIf=\"!(field | ccdIsCompound); else CompoundRow\">\n              <ccd-field-write [caseField]=\"field\"\n                               [caseFields]=\"caseFields\"\n                               [formGroup]=\"formGroup\"\n                               [idPrefix]=\"\"\n                               [hidden]=\"field.hidden\">\n              </ccd-field-write>\n            </ng-container>\n            <ng-template #CompoundRow>\n              <ccd-field-write [caseField]=\"field\"\n                               [caseFields]=\"caseFields\"\n                               [formGroup]=\"formGroup\"\n                               [idPrefix]=\"field.id + '_'\"\n                               [hidden]=\"field.hidden\"></ccd-field-write>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  "}]}],"members":{"fields":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"formGroup":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"caseFields":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"pageChangeSubject":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":3}}]}],"valuesChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":49,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../../services/form/form-value.service","name":"FormValueService","line":56,"character":40}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"subscribeToFormChanges":[{"__symbolic":"method"}],"retrieveInitialFormValues":[{"__symbolic":"method"}],"detectChangesAndEmit":[{"__symbolic":"method"}]}}}}]