import { Component, Output, Input, EventEmitter } from '@angular/core';
import { BulkScaningPaymentService } from '../../services/bulk-scaning-payment/bulk-scaning-payment.service';
import { PaymentLibComponent } from '../../payment-lib.component';
import { Router } from '@angular/router';
import { PaymentViewService } from '../../services/payment-view/payment-view.service';
import { OrderslistService } from '../../services/orderslist.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/bulk-scaning-payment/bulk-scaning-payment.service";
import * as i3 from "../../payment-lib.component";
import * as i4 from "../../services/payment-view/payment-view.service";
import * as i5 from "../../services/orderslist.service";
import * as i6 from "@angular/common";
function UnprocessedPaymentsComponent_ng_container_0_thead_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "thead", 5);
} }
function UnprocessedPaymentsComponent_ng_container_0_tr_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tr", 6)(1, "td", 7);
    i0.ɵɵtext(2, " Unallocated ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(3, "td", 8);
    i0.ɵɵtext(4);
    i0.ɵɵpipe(5, "currency");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(6, "td", 8)(7, "td", 8)(8, "td", 8)(9, "td", 8);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const unassignedRecord_r5 = ctx.$implicit;
    i0.ɵɵadvance(4);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind4(5, 1, unassignedRecord_r5.amount, "GBP", "symbol", "1.2-2"), "");
} }
function UnprocessedPaymentsComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "table", 1);
    i0.ɵɵtemplate(2, UnprocessedPaymentsComponent_ng_container_0_thead_2_Template, 1, 0, "thead", 2);
    i0.ɵɵelementStart(3, "tbody", 3);
    i0.ɵɵtemplate(4, UnprocessedPaymentsComponent_ng_container_0_tr_4_Template, 10, 6, "tr", 4);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngIf", ctx_r0.PAYMENTSLENGTH === 0);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("ngForOf", ctx_r0.unassignedRecordList);
} }
function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r15 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 27)(1, "button", 28);
    i0.ɵɵlistener("click", function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_8_Template_button_click_1_listener($event) { i0.ɵɵrestoreView(_r15); const unassignedRecord_r9 = i0.ɵɵnextContext().$implicit; const ctx_r13 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r13.redirectToFeeSearchPage($event, unassignedRecord_r9.dcn_reference)); });
    i0.ɵɵtext(2, " Allocate to new service request ");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(3, "br");
    i0.ɵɵelementStart(4, "button", 28);
    i0.ɵɵlistener("click", function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_8_Template_button_click_4_listener() { i0.ɵɵrestoreView(_r15); const unassignedRecord_r9 = i0.ɵɵnextContext().$implicit; const ctx_r16 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r16.goToAllocatePage(unassignedRecord_r9.dcn_reference)); });
    i0.ɵɵtext(5, " Allocate to existing service request ");
    i0.ɵɵelementEnd()();
} if (rf & 2) {
    const ctx_r11 = i0.ɵɵnextContext(3);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("disabled", !ctx_r11.isAllocatedToNewFeebtnEnabled)("ngClass", !ctx_r11.isAllocatedToNewFeebtnEnabled ? "button govuk-button--secondary button--disabled" : "button govuk-button--secondary");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("disabled", !ctx_r11.isAllocateToExistingFeebtnEnabled)("ngClass", !ctx_r11.isAllocateToExistingFeebtnEnabled ? "button govuk-button--secondary button--disabled" : "button govuk-button--secondary");
} }
function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_14_Template(rf, ctx) { if (rf & 1) {
    const _r20 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "div", 29)(1, "dl", 30)(2, "div", 31)(3, "dt", 32);
    i0.ɵɵtext(4, " Method ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(5, "dd", 33);
    i0.ɵɵtext(6);
    i0.ɵɵpipe(7, "lowercase");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(8, "div", 31)(9, "dt", 32);
    i0.ɵɵtext(10, " Payment assest number (DCN) ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "dd", 33);
    i0.ɵɵtext(12);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementStart(13, "div", 34)(14, "button", 28);
    i0.ɵɵlistener("click", function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_14_Template_button_click_14_listener() { i0.ɵɵrestoreView(_r20); const unassignedRecord_r9 = i0.ɵɵnextContext().$implicit; const ctx_r18 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r18.loadUnsolicitedPage("unidentifiedPage", unassignedRecord_r9.dcn_reference)); });
    i0.ɵɵtext(15, " Mark as unidentified ");
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(16, "div")(17, "button", 28);
    i0.ɵɵlistener("click", function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_14_Template_button_click_17_listener() { i0.ɵɵrestoreView(_r20); const unassignedRecord_r9 = i0.ɵɵnextContext().$implicit; const ctx_r21 = i0.ɵɵnextContext(2); return i0.ɵɵresetView(ctx_r21.loadUnsolicitedPage("unsolicitedPage", unassignedRecord_r9.dcn_reference)); });
    i0.ɵɵtext(18, " Mark as transferred ");
    i0.ɵɵelementEnd()()();
} if (rf & 2) {
    const unassignedRecord_r9 = i0.ɵɵnextContext().$implicit;
    const ctx_r12 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind1(7, 6, ctx_r12.trimUnderscore(unassignedRecord_r9.payment_method)), " ");
    i0.ɵɵadvance(6);
    i0.ɵɵtextInterpolate1(" ", unassignedRecord_r9.dcn_reference, " ");
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("disabled", !ctx_r12.isMarkAsUnidentifiedbtnEnabled)("ngClass", !ctx_r12.isMarkAsUnidentifiedbtnEnabled ? "button govuk-button--secondary button--disabled" : "button govuk-button--secondary");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("disabled", !ctx_r12.isUnprocessedRecordSelected)("ngClass", !ctx_r12.isUnprocessedRecordSelected ? "button govuk-button--secondary button--disabled" : "button govuk-button--secondary");
} }
function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_Template(rf, ctx) { if (rf & 1) {
    const _r25 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "tr")(2, "td", 19);
    i0.ɵɵtext(3, " Unallocated ");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(4, "td", 20);
    i0.ɵɵtext(5);
    i0.ɵɵpipe(6, "currency");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(7, "td", 21);
    i0.ɵɵtemplate(8, UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_8_Template, 6, 4, "div", 22);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(9, "tr")(10, "td", 23)(11, "summary", 24);
    i0.ɵɵlistener("click", function UnprocessedPaymentsComponent_ng_container_1_ng_container_18_Template_summary_click_11_listener() { const restoredCtx = i0.ɵɵrestoreView(_r25); const unassignedRecord_r9 = restoredCtx.$implicit; return i0.ɵɵresetView(unassignedRecord_r9.expanded = !unassignedRecord_r9.expanded); });
    i0.ɵɵelementStart(12, "span", 25);
    i0.ɵɵtext(13, " More details and actions ");
    i0.ɵɵelementEnd()();
    i0.ɵɵtemplate(14, UnprocessedPaymentsComponent_ng_container_1_ng_container_18_div_14_Template, 19, 8, "div", 26);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const unassignedRecord_r9 = ctx.$implicit;
    const ctx_r8 = i0.ɵɵnextContext(2);
    i0.ɵɵadvance(5);
    i0.ɵɵtextInterpolate1(" ", i0.ɵɵpipeBind4(6, 3, unassignedRecord_r9.amount, "GBP", "symbol", "1.2-2"), " ");
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", ctx_r8.IS_BUTTON_ENABLE && !ctx_r8.isTurnOff);
    i0.ɵɵadvance(6);
    i0.ɵɵproperty("ngIf", unassignedRecord_r9.expanded);
} }
function UnprocessedPaymentsComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainerStart(0);
    i0.ɵɵelementStart(1, "div", 9);
    i0.ɵɵelement(2, "input", 10, 11);
    i0.ɵɵelementStart(4, "table", 12)(5, "thead", 5)(6, "tr", 6)(7, "td", 13);
    i0.ɵɵtext(8, "Status");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(9, "td", 14);
    i0.ɵɵtext(10, "Amount");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(11, "td", 15);
    i0.ɵɵtext(12, "Date allocated");
    i0.ɵɵelementEnd();
    i0.ɵɵelementStart(13, "td", 16);
    i0.ɵɵtext(14, "Request reference");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(15, "td", 13)(16, "td", 17);
    i0.ɵɵelementEnd()();
    i0.ɵɵelementStart(17, "tbody");
    i0.ɵɵtemplate(18, UnprocessedPaymentsComponent_ng_container_1_ng_container_18_Template, 15, 8, "ng-container", 18);
    i0.ɵɵelementEnd()()();
    i0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = i0.ɵɵnextContext();
    i0.ɵɵadvance(18);
    i0.ɵɵproperty("ngForOf", ctx_r1.unassignedRecordList);
} }
function UnprocessedPaymentsComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
export class UnprocessedPaymentsComponent {
    router;
    bulkScaningPaymentService;
    paymentLibComponent;
    paymentViewService;
    OrderslistService;
    FEE_RECORDS_EXISTS;
    PAYMENTREF;
    ISTURNOFF;
    IS_BUTTON_ENABLE;
    IS_OS_AMT_AVAILABLE;
    ISSFENABLE;
    PAYMENTSLENGTH;
    LEVEL;
    selectedUnprocessedFeeEvent = new EventEmitter();
    getUnprocessedFeeCount = new EventEmitter();
    viewStatus = 'main';
    unassignedRecordList;
    upPaymentErrorMessage = null;
    ccdCaseNumber;
    recordId = null;
    isRecordExist = false;
    dcnNumber = null;
    selectedOption;
    isUnprocessedRecordSelected = true;
    isAllocateToExistingFeebtnEnabled = false;
    isMarkAsUnidentifiedbtnEnabled = false;
    isAllocatedToNewFeebtnEnabled = false;
    isExceptionCase = false;
    serviceId = null;
    isBulkScanEnable;
    isTurnOff = true;
    isStFixEnable;
    unassignedRecordSelectedList;
    unassignedRecordListLength = 0;
    showContent;
    constructor(router, bulkScaningPaymentService, paymentLibComponent, paymentViewService, OrderslistService) {
        this.router = router;
        this.bulkScaningPaymentService = bulkScaningPaymentService;
        this.paymentLibComponent = paymentLibComponent;
        this.paymentViewService = paymentViewService;
        this.OrderslistService = OrderslistService;
    }
    ngOnInit() {
        // Todo ...
        this.ccdCaseNumber = this.paymentLibComponent.CCD_CASE_NUMBER;
        this.selectedOption = this.paymentLibComponent.SELECTED_OPTION.toLocaleLowerCase();
        this.dcnNumber = this.paymentLibComponent.DCN_NUMBER;
        this.isBulkScanEnable = this.paymentLibComponent.ISBSENABLE;
        this.isTurnOff = this.paymentLibComponent.ISTURNOFF;
        this.isStFixEnable = this.paymentLibComponent.ISSFENABLE;
        this.OrderslistService.getFeeExists().subscribe((data) => this.FEE_RECORDS_EXISTS = data);
        this.getUnassignedPaymentlist();
    }
    getUnassignedPaymentlist() {
        if (this.selectedOption === 'dcn') {
            this.bulkScaningPaymentService.getBSPaymentsByDCN(this.dcnNumber).subscribe(unassignedPayments => {
                //  unassignedPayments['data'].map(data => data.expandable=false);
                if (unassignedPayments['data'] && unassignedPayments['data'].payments) {
                    this.setValuesForUnassignedRecord(unassignedPayments['data']);
                }
                else if (unassignedPayments['payments']) {
                    this.setValuesForUnassignedRecord(unassignedPayments);
                }
                else {
                    this.upPaymentErrorMessage = 'error';
                    this.getUnprocessedFeeCount.emit('0');
                }
            }, (error) => {
                this.upPaymentErrorMessage = error;
                this.getUnprocessedFeeCount.emit('0');
            });
        }
        else {
            this.bulkScaningPaymentService.getBSPaymentsByCCD(this.ccdCaseNumber).subscribe(unassignedPayments => {
                //  unassignedPayments['data'].map(data => data.expandable=false);
                if (unassignedPayments['data'] && unassignedPayments['data'].payments) {
                    this.setValuesForUnassignedRecord(unassignedPayments['data']);
                }
                else if (unassignedPayments['payments']) {
                    this.setValuesForUnassignedRecord(unassignedPayments);
                }
                else {
                    this.upPaymentErrorMessage = 'error';
                    this.getUnprocessedFeeCount.emit('0');
                }
            }, (error) => {
                this.upPaymentErrorMessage = error;
                this.getUnprocessedFeeCount.emit('0');
            });
        }
    }
    setValuesForUnassignedRecord(unassignedPayments) {
        this.unassignedRecordList = unassignedPayments.payments;
        if (this.unassignedRecordList) {
            this.unassignedRecordListLength = unassignedPayments.payments.length;
        }
        this.serviceId = unassignedPayments.responsible_service_id;
        if (unassignedPayments['ccd_reference'] === undefined) {
            this.isExceptionCase = true;
        }
        // this.isRecordExist =  this.unassignedRecordList.length === 0;
        this.getUnprocessedFeeCount.emit(this.unassignedRecordList.length);
        this.unprocessedPaymentSelectEvent(this.unassignedRecordList);
    }
    formatUnassignedRecordId(ID) {
        return `unassignrecord-${ID}`;
    }
    trimUnderscore(method) {
        return this.bulkScaningPaymentService.removeUnwantedString(method, ' ');
    }
    redirectToFeeSearchPage(event, dcn_reference) {
        event.preventDefault();
        this.recordId = dcn_reference;
        let url = this.isBulkScanEnable ? '&isBulkScanning=Enable' : '&isBulkScanning=Disable';
        url += this.ISTURNOFF ? '&isTurnOff=Enable' : '&isTurnOff=Disable';
        url += this.isStFixEnable ? '&isStFixEnable=Enable' : '&isStFixEnable=Disable';
        url += `&caseType=${this.paymentLibComponent.CASETYPE}`;
        this.router.navigateByUrl(`/fee-search?selectedOption=${this.selectedOption}&ccdCaseNumber=${this.ccdCaseNumber}&dcn=${this.recordId}${url}`);
    }
    loadUnsolicitedPage(viewName, dcn_reference) {
        this.recordId = dcn_reference;
        this.paymentLibComponent.bspaymentdcn = this.recordId;
        this.paymentLibComponent.viewName = viewName;
    }
    unprocessedPaymentSelectEvent(selectedRecordReference) {
        this.isUnprocessedRecordSelected = true;
        this.validateButtons();
        this.selectedUnprocessedFeeEvent.emit(selectedRecordReference);
    }
    resetButtons() {
        this.isUnprocessedRecordSelected = false;
        this.isAllocateToExistingFeebtnEnabled = false;
        this.isMarkAsUnidentifiedbtnEnabled = false;
        this.isAllocatedToNewFeebtnEnabled = false;
    }
    goToAllocatePage(dcn_reference) {
        this.paymentLibComponent.bspaymentdcn = dcn_reference;
        this.paymentLibComponent.unProcessedPaymentServiceId = this.serviceId;
        this.paymentLibComponent.isTurnOff = this.ISTURNOFF;
        this.paymentLibComponent.ISSFENABLE = this.isStFixEnable;
        if (this.ISTURNOFF) {
            this.paymentLibComponent.paymentGroupReference = this.PAYMENTREF;
            this.paymentLibComponent.viewName = 'fee-summary';
        }
        else {
            this.paymentLibComponent.paymentGroupReference = null;
            this.paymentLibComponent.viewName = 'allocate-payments';
        }
    }
    validateButtons() {
        setTimeout(() => {
            if (this.isUnprocessedRecordSelected && this.isExceptionCase) {
                this.isMarkAsUnidentifiedbtnEnabled = true;
            }
            else if (this.isUnprocessedRecordSelected && !this.isExceptionCase && !this.FEE_RECORDS_EXISTS) {
                this.isAllocateToExistingFeebtnEnabled = false;
                this.isAllocatedToNewFeebtnEnabled = true;
            }
            else if (this.isUnprocessedRecordSelected && !this.isExceptionCase && this.FEE_RECORDS_EXISTS) {
                if (!this.ISTURNOFF) {
                    this.isAllocateToExistingFeebtnEnabled = true;
                    this.isAllocatedToNewFeebtnEnabled = false;
                }
                else {
                    this.isAllocateToExistingFeebtnEnabled = this.IS_OS_AMT_AVAILABLE;
                    this.isAllocatedToNewFeebtnEnabled = true;
                }
            }
        }, 4000);
    }
    unprocessedPaymentUnSelectEvent(event) {
        event.preventDefault();
        this.recordId = null;
        this.isUnprocessedRecordSelected = false;
        this.isAllocateToExistingFeebtnEnabled = false;
        this.isAllocatedToNewFeebtnEnabled = false;
        this.isMarkAsUnidentifiedbtnEnabled = false;
        //this.validateButtons();
        this.selectedUnprocessedFeeEvent.emit('');
    }
    showDetailRow(event, obj, i) {
        event.preventDefault();
        this.unassignedRecordSelectedList = obj;
    }
    static ɵfac = function UnprocessedPaymentsComponent_Factory(t) { return new (t || UnprocessedPaymentsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.BulkScaningPaymentService), i0.ɵɵdirectiveInject(i3.PaymentLibComponent), i0.ɵɵdirectiveInject(i4.PaymentViewService), i0.ɵɵdirectiveInject(i5.OrderslistService)); };
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: UnprocessedPaymentsComponent, selectors: [["ccpay-app-unprocessed-payments"]], inputs: { FEE_RECORDS_EXISTS: "FEE_RECORDS_EXISTS", PAYMENTREF: "PAYMENTREF", ISTURNOFF: "ISTURNOFF", IS_BUTTON_ENABLE: "IS_BUTTON_ENABLE", IS_OS_AMT_AVAILABLE: "IS_OS_AMT_AVAILABLE", ISSFENABLE: "ISSFENABLE", PAYMENTSLENGTH: "PAYMENTSLENGTH", LEVEL: "LEVEL" }, outputs: { selectedUnprocessedFeeEvent: "selectedUnprocessedFeeEvent", getUnprocessedFeeCount: "getUnprocessedFeeCount" }, decls: 3, vars: 3, consts: [[4, "ngIf"], [1, "govuk-table"], ["class", "govuk-table__head", 4, "ngIf"], [1, "govuk-table__body"], ["class", "govuk-table__row", 4, "ngFor", "ngForOf"], [1, "govuk-table__head"], [1, "govuk-table__row"], [1, "col-13"], [1, "govuk-table__cell", "whitespace-inherit"], [1, "unprocessed-payments"], ["type", "hidden", "value", "CASETRANSACTION", 1, "iFrameDrivenImageValue"], ["myInput", ""], [1, "table"], ["scope", "col", 1, "govuk-table__header", "col-13"], ["scope", "col", 1, "govuk-table__header", "col-9"], ["scope", "col", 1, "govuk-table__header", "col-16"], ["colspan", "3", "scope", "col", 1, "govuk-table__header", "col-24"], ["scope", "col", 1, "govuk-table__header"], [4, "ngFor", "ngForOf"], [1, "govuk-table__cell", "whitespace-inherit", "col-13"], [1, "govuk-table__cell", "whitespace-inherit", "col-10"], ["colspan", "8", 1, "govuk-table__cell", "whitespace-inherit"], ["class", "alignright", 4, "ngIf"], ["colspan", "10", 1, "unassigned", "noborders"], [1, "govuk-details__summary", 3, "click"], [1, "govuk-details__summary-text"], ["class", "govuk-details__text  govuk-!-margin-bottom-5 paddingright", 4, "ngIf"], [1, "alignright"], ["type", "button", 3, "disabled", "ngClass", "click"], [1, "govuk-details__text", "govuk-!-margin-bottom-5", "paddingright"], [1, "govuk-summary-list", "govuk-!-margin-bottom-5"], [1, "govuk-summary-list__row"], [1, "govuk-summary-list__key"], [1, "govuk-summary-list__value"], [1, "govuk-!-margin-bottom-5"]], template: function UnprocessedPaymentsComponent_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵtemplate(0, UnprocessedPaymentsComponent_ng_container_0_Template, 5, 2, "ng-container", 0);
            i0.ɵɵtemplate(1, UnprocessedPaymentsComponent_ng_container_1_Template, 19, 1, "ng-container", 0);
            i0.ɵɵtemplate(2, UnprocessedPaymentsComponent_ng_container_2_Template, 1, 0, "ng-container", 0);
        } if (rf & 2) {
            i0.ɵɵproperty("ngIf", !ctx.IS_BUTTON_ENABLE);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.IS_BUTTON_ENABLE);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.viewStatus === "main");
        } }, dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i6.LowerCasePipe, i6.CurrencyPipe], styles: [".unprocessed-payments[_ngcontent-%COMP%]   .unprocessed-payments--radio-button[_ngcontent-%COMP%]{bottom:10px}.disable[_ngcontent-%COMP%]{text-decoration:none;padding:.526315em .789473em .263157em;cursor:default;color:#fff;background-color:#00823b;pointer-events:none;font-size:1em;line-height:1.25;outline:1px solid transparent;outline-offset:-1px;-webkit-appearance:none;box-shadow:0 2px #003618}.button.disabled[_ngcontent-%COMP%], .button[disabled=disabled][_ngcontent-%COMP%], .button[disabled][_ngcontent-%COMP%]{zoom:1;filter:alpha(opacity=50);opacity:.5}.button.disabled[_ngcontent-%COMP%]:active, .button[disabled=disabled][_ngcontent-%COMP%]:active, .button[disabled][_ngcontent-%COMP%]:active{top:0;box-shadow:0 2px #003618}.button[disabled=disabled][_ngcontent-%COMP%]{background:#00823b}.col-13[_ngcontent-%COMP%]{width:13%!important}.col-17[_ngcontent-%COMP%]{width:17%!important}.col-12[_ngcontent-%COMP%]{width:12%!important}.col-9[_ngcontent-%COMP%]{width:9%!important}.col-15[_ngcontent-%COMP%]{width:15%!important}.lowercase[_ngcontent-%COMP%]{text-transform:lowercase}.capitalize[_ngcontent-%COMP%]:first-letter{text-transform:uppercase}.whitespace-inherit[_ngcontent-%COMP%]{white-space:inherit!important}.top_row[_ngcontent-%COMP%]{display:table;width:100%}.top_row[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:table-cell;width:50%;border-bottom:1px solid #eee}.unassigned[_ngcontent-%COMP%]{border-top:hidden}.col-16[_ngcontent-%COMP%]{width:16%!important}.col-10[_ngcontent-%COMP%]{width:10%!important}.col-14[_ngcontent-%COMP%]{width:14%!important}.col-19[_ngcontent-%COMP%]{width:19%!important;padding-left:0!important}.col-18[_ngcontent-%COMP%]{width:18%!important;padding-left:0!important;padding-right:0!important}.col-21[_ngcontent-%COMP%]{width:21%!important}.col-20[_ngcontent-%COMP%]{width:20%!important}.col-11[_ngcontent-%COMP%]{width:11%!important}.col-37[_ngcontent-%COMP%]{width:37%!important}.noborders[_ngcontent-%COMP%] > td[_ngcontent-%COMP%]{border-color:transparent;border-top-style:hidden;border-right-style:hidden;border-left-style:hidden}.govuk-button--secondary[_ngcontent-%COMP%]{margin-bottom:10px}.govuk-summary-list[_ngcontent-%COMP%]{font-size:19px}.govuk-summary-list__key[_ngcontent-%COMP%]{width:35%}td[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden!important}table[_ngcontent-%COMP%]{table-layout:fixed;width:100%}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{word-wrap:break-word}.alignright[_ngcontent-%COMP%]{text-align:right}.paddingright[_ngcontent-%COMP%]{padding-right:0}"] });
}
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(UnprocessedPaymentsComponent, [{
        type: Component,
        args: [{ selector: 'ccpay-app-unprocessed-payments', template: "<!-- <ng-container *ngIf=\"IS_BUTTON_ENABLE\">\n    <div class=\"unprocessed-payments govuk-grid-column-full govuk-!-padding-bottom-3\">\n        <input #myInput type='hidden' class='iFrameDrivenImageValue' value='CASETRANSACTION'>\n        <h3 class=\"heading-medium\" *ngIf=\"!IS_BUTTON_ENABLE\">Unprocessed payments</h3>\n        <h3 class=\"heading-medium\" *ngIf=\"IS_BUTTON_ENABLE\">Unallocated payments</h3>\n          <table class=\"govuk-table\">\n            <thead class=\"govuk-table__head\">\n              <tr class=\"govuk-table__row\">\n                  <td class=\"govuk-table__header\" scope=\"col\" *ngIf=\"IS_BUTTON_ENABLE && !isTurnOff\">Select</td>\n                  <td class=\"govuk-table__header\" scope=\"col\" *ngIf=\"IS_BUTTON_ENABLE && isTurnOff\"><a href=\"#\" (click)=\"unprocessedPaymentUnSelectEvent($event)\">Unselect</a></td>\n      \n                  <td class=\"govuk-table__header\" scope=\"col\">Payment asset number (DCN)</td>\n                  <td class=\"govuk-table__header\" scope=\"col\">Banked date</td>\n                  <td class=\"govuk-table__header\" scope=\"col\">Amount</td>\n                  <td class=\"govuk-table__header\" scope=\"col\">Method</td>\n                 </tr>\n            </thead>\n            <tbody class=\"govuk-table__body\" >\n              <tr class=\"govuk-table__row\" *ngFor=\"let unassignedRecord of unassignedRecordList; let i of index;\">\n                  <td class=\"govuk-table__cell\" *ngIf=\"IS_BUTTON_ENABLE\">\n                    <div class=\"multiple-choice unprocessed-payments--radio-button\">\n                      <input id=\"'unpaiedFee'+i+''\"\n                      aria-label=\"unassignedRecord\"\n                      name=\"unassignedRecord\"\n                      type=\"radio\"\n                      [(ngModel)]=\"recordId\"\n                      (click)=\"unprocessedPaymentSelectEvent(unassignedRecord.dcn_reference)\"\n                      value=\"{{unassignedRecord.dcn_reference}}\" />\n                      <label for=\"radio-inline-1\"></label>\n                    </div>\n                  </td>\n                  <td class=\"govuk-table__cell whitespace-inherit\">\n                    {{unassignedRecord.dcn_reference}}\n                  </td>\n                  <td class=\"govuk-table__cell whitespace-inherit\"> {{unassignedRecord.date_banked | date:'dd MMM yyyy'}}</td>\n                  <td class=\"govuk-table__cell whitespace-inherit\"> {{unassignedRecord.amount | currency :'GBP':'symbol':'1.2-2'}}</td>\n                  <td class=\"capitalize govuk-table__cell whitespace-inherit\"> {{ trimUnderscore(unassignedRecord.payment_method) | lowercase}}  </td>\n                </tr>\n            </tbody>\n            <tbody class=\"govuk-table__body\" *ngIf=\"upPaymentErrorMessage !== null\">\n              <td class=\"govuk-table__cell\" colspan=\"6\">No unallocated payments record available</td>\n            </tbody>\n          </table>\n         <div class=\"button-grb\" *ngIf=\"IS_BUTTON_ENABLE && !isTurnOff\">\n            <button type=\"button\"\n            [disabled]=\"!isAllocatedToNewFeebtnEnabled\"\n            [ngClass]=\"!isAllocatedToNewFeebtnEnabled ? 'button govuk-button--secondary button--disabled govuk-!-margin-right-1' : 'button govuk-button--secondary govuk-!-margin-right-1'\" (click)=\"redirectToFeeSearchPage($event)\">\n              Allocate to a new fee\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isAllocateToExistingFeebtnEnabled\"\n            [ngClass]='!isAllocateToExistingFeebtnEnabled ?  \"button govuk-button--secondary button--disabled govuk-!-margin-right-1\" : \"button govuk-button--secondary govuk-!-margin-right-1\"' (click)=\"goToAllocatePage()\">\n              Allocate to an existing fee\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isMarkAsUnidentifiedbtnEnabled\"\n            [ngClass]='!isMarkAsUnidentifiedbtnEnabled ?  \"button govuk-button--secondary button--disabled govuk-!-margin-right-1\" : \"button govuk-button--secondary govuk-!-margin-right-1\"' (click)=\"loadUnsolicitedPage('unidentifiedPage')\">\n              Mark as unidentified\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isUnprocessedRecordSelected\"\n            [ngClass]='!isUnprocessedRecordSelected ?  \"button govuk-button--secondary button--disabled govuk-!-margin-right-1\" : \"button govuk-button--secondary govuk-!-margin-right-1\"' (click)=\"loadUnsolicitedPage('unsolicitedPage')\">\n              Mark as transferred\n            </button>  \n         </div>\n      \n         <div class=\"button-grb\" *ngIf=\"IS_BUTTON_ENABLE && isTurnOff\">\n            <button type=\"button\"\n            [disabled]=\"!isAllocatedToNewFeebtnEnabled\"\n            [ngClass]=\"!isAllocatedToNewFeebtnEnabled ? 'button button--disabled govuk-!-margin-right-1' : 'button govuk-!-margin-right-1'\" (click)=\"redirectToFeeSearchPage($event)\">\n              Allocate to a new fee\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isAllocateToExistingFeebtnEnabled\"\n            [ngClass]='!isAllocateToExistingFeebtnEnabled ?  \"button button--disabled govuk-!-margin-right-1\" : \"button govuk-!-margin-right-1\"' (click)=\"goToAllocatePage()\">\n              Allocate to an existing fee\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isMarkAsUnidentifiedbtnEnabled\"\n            [ngClass]='!isMarkAsUnidentifiedbtnEnabled ?  \"button button--disabled govuk-!-margin-right-1\" : \"button govuk-!-margin-right-1\"' (click)=\"loadUnsolicitedPage('unidentifiedPage')\">\n              Mark as unidentified\n            </button>\n            <button type=\"button\" \n            [disabled]=\"!isUnprocessedRecordSelected\"\n            [ngClass]='!isUnprocessedRecordSelected ?  \"button button--disabled govuk-!-margin-right-1\" : \"button govuk-!-margin-right-1\"' (click)=\"loadUnsolicitedPage('unsolicitedPage')\">\n              Mark as transferred\n            </button> \n         </div>\n      </div>\n</ng-container> -->\n\n\n<ng-container *ngIf=\"!IS_BUTTON_ENABLE\">\n    <table class=\"govuk-table\">\n       \n        <thead class=\"govuk-table__head\" *ngIf='PAYMENTSLENGTH === 0 '>\n            <!-- <tr class=\"govuk-table__row\">\n                <td class=\"govuk-table__header col-14\" scope=\"col\">Status</td>\n                <td class=\"govuk-table__header col-10\" scope=\"col\">Amount</td>\n                <td class=\"govuk-table__header col-14\" scope=\"col\">Date</td>\n                <td class=\"govuk-table__header col-20\" scope=\"col\">Request reference</td>\n                <td class=\"govuk-table__header col-9\" scope=\"col\"></td>\n                <td class=\"govuk-table__header\" scope=\"col\"></td>\n              </tr> -->\n          </thead>\n          <tbody class=\"govuk-table__body\">\n          <tr class=\"govuk-table__row\" *ngFor=\"let unassignedRecord of unassignedRecordList; let i = index;\">\n                    <td class=\"govuk-table__cell whitespace-inherit\" class=\"col-13\">\n                    Unallocated \n                    </td>\n                    <td class=\"govuk-table__cell whitespace-inherit\"> {{unassignedRecord.amount | currency :'GBP':'symbol':'1.2-2'}}</td>\n                    <td class=\"govuk-table__cell whitespace-inherit\"></td>\n                    <td class=\"govuk-table__cell whitespace-inherit\"></td>\n                    <td class=\"govuk-table__cell whitespace-inherit\"></td>\n                    <td class=\"govuk-table__cell whitespace-inherit\"></td>\n          </tr>\n          </tbody>\n       \n    </table>\n\n</ng-container>\n\n\n<!--Orders Unallocated changes-->\n<ng-container *ngIf=\"IS_BUTTON_ENABLE\">\n    <div class=\"unprocessed-payments\">\n        <input #myInput type='hidden' class='iFrameDrivenImageValue' value='CASETRANSACTION'>\n          <table class=\"table\">\n             \n              <thead class=\"govuk-table__head\">\n                  <tr class=\"govuk-table__row\">\n                      <td class=\"govuk-table__header col-13\" scope=\"col\">Status</td>\n                      <td class=\"govuk-table__header col-9\" scope=\"col\">Amount</td>\n                      <td class=\"govuk-table__header col-16\" scope=\"col\">Date allocated</td>\n                      <td class=\"govuk-table__header col-24\" colspan=\"3\" scope=\"col\">Request reference</td>\n                      <td class=\"govuk-table__header col-13\" scope=\"col\"></td>\n                      <td class=\"govuk-table__header\" scope=\"col\"></td>\n                    </tr>\n                </thead>\n              <tbody>\n            <ng-container *ngFor=\"let unassignedRecord of unassignedRecordList; let i = index;\">\n             <tr>\n                <td  class=\"govuk-table__cell whitespace-inherit col-13\" >\n                  Unallocated \n               </td>\n                <td class=\"govuk-table__cell whitespace-inherit col-10\">\n                    {{unassignedRecord.amount | currency :'GBP':'symbol':'1.2-2'}}\n                </td>\n                <td class=\"govuk-table__cell whitespace-inherit\" colspan=\"8\">\n                    <div  *ngIf=\"IS_BUTTON_ENABLE && !isTurnOff\" class=\"alignright\">\n                        <button type=\"button\"\n                        [disabled]=\"!isAllocatedToNewFeebtnEnabled\"\n                        [ngClass]=\"!isAllocatedToNewFeebtnEnabled ? 'button govuk-button--secondary button--disabled' : 'button govuk-button--secondary'\" (click)=\"redirectToFeeSearchPage($event,unassignedRecord.dcn_reference)\">\n                          Allocate to new service request\n                        </button><br/>\n                        <button type=\"button\" \n                        [disabled]=\"!isAllocateToExistingFeebtnEnabled\"\n                        [ngClass]='!isAllocateToExistingFeebtnEnabled ?  \"button govuk-button--secondary button--disabled\" : \"button govuk-button--secondary\"' (click)=\"goToAllocatePage(unassignedRecord.dcn_reference)\">\n                          Allocate to existing service request \n                        </button>\n                </div>\n            \n                </td>\n             </tr>\n           \n              <!-- <ng-container> -->\n             <tr>\n                  <td class=\"unassigned noborders\" colspan=\"10\">\n                      <summary (click)=\"unassignedRecord.expanded = !unassignedRecord.expanded\" class=\"govuk-details__summary\">\n                          <span class=\"govuk-details__summary-text\">\n                              More details and actions\n                          </span>\n                      </summary>\n                      <div *ngIf=\"unassignedRecord.expanded\" class=\"govuk-details__text  govuk-!-margin-bottom-5 paddingright\">\n                          <dl class=\"govuk-summary-list govuk-!-margin-bottom-5\">\n                              <div class=\"govuk-summary-list__row\">\n                                  <dt class=\"govuk-summary-list__key\">\n                                      Method\n                                  </dt>\n                                  <dd class=\"govuk-summary-list__value\">\n                                      {{ trimUnderscore(unassignedRecord.payment_method) | lowercase}}\n                                  </dd>\n                              </div>\n                              <div class=\"govuk-summary-list__row\">\n                                  <dt class=\"govuk-summary-list__key\">\n                                      Payment assest number (DCN) \n                                  </dt>\n                                  <dd class=\"govuk-summary-list__value\">\n                                      {{unassignedRecord.dcn_reference}}\n                                  </dd>\n                              </div>\n                          </dl>\n                          <div class=\" govuk-!-margin-bottom-5\">\n                              <button type=\"button\" \n                              [disabled]=\"!isMarkAsUnidentifiedbtnEnabled\"\n                              [ngClass]='!isMarkAsUnidentifiedbtnEnabled ?  \"button govuk-button--secondary button--disabled\" : \"button govuk-button--secondary\"' (click)=\"loadUnsolicitedPage('unidentifiedPage',unassignedRecord.dcn_reference)\">\n                                Mark as unidentified\n                              </button>\n                          </div>\n                          <div>\n                              <button type=\"button\" \n                          [disabled]=\"!isUnprocessedRecordSelected\"\n                          [ngClass]='!isUnprocessedRecordSelected ?  \"button govuk-button--secondary button--disabled\" : \"button govuk-button--secondary\"' (click)=\"loadUnsolicitedPage('unsolicitedPage',unassignedRecord.dcn_reference)\">\n                            Mark as transferred\n                          </button>  \n                          </div>\n\n                      </div>\n                  </td> \n                </tr> \n              <!-- </ng-container> -->\n             </ng-container>\n              </tbody>\n              </table>\n      \n        </div>\n</ng-container>\n\n<ng-container *ngIf=\"viewStatus === 'main'\">\n\n</ng-container>\n<!-- <ng-container *ngIf=\"PAYMENTSLENGTH === 0 && unassignedRecordListLength === 0\">\n  <br/>No payments.<br/>\n</ng-container> -->\n\n", styles: [".unprocessed-payments .unprocessed-payments--radio-button{bottom:10px}.disable{text-decoration:none;padding:.526315em .789473em .263157em;cursor:default;color:#fff;background-color:#00823b;pointer-events:none;font-size:1em;line-height:1.25;outline:1px solid transparent;outline-offset:-1px;-webkit-appearance:none;box-shadow:0 2px #003618}.button.disabled,.button[disabled=disabled],.button[disabled]{zoom:1;filter:alpha(opacity=50);opacity:.5}.button.disabled:active,.button[disabled=disabled]:active,.button[disabled]:active{top:0;box-shadow:0 2px #003618}.button[disabled=disabled]{background:#00823b}.col-13{width:13%!important}.col-17{width:17%!important}.col-12{width:12%!important}.col-9{width:9%!important}.col-15{width:15%!important}.lowercase{text-transform:lowercase}.capitalize:first-letter{text-transform:uppercase}.whitespace-inherit{white-space:inherit!important}.top_row{display:table;width:100%}.top_row>div{display:table-cell;width:50%;border-bottom:1px solid #eee}.unassigned{border-top:hidden}.col-16{width:16%!important}.col-10{width:10%!important}.col-14{width:14%!important}.col-19{width:19%!important;padding-left:0!important}.col-18{width:18%!important;padding-left:0!important;padding-right:0!important}.col-21{width:21%!important}.col-20{width:20%!important}.col-11{width:11%!important}.col-37{width:37%!important}.noborders>td{border-color:transparent;border-top-style:hidden;border-right-style:hidden;border-left-style:hidden}.govuk-button--secondary{margin-bottom:10px}.govuk-summary-list{font-size:19px}.govuk-summary-list__key{width:35%}td{white-space:nowrap;overflow:hidden!important}table{table-layout:fixed;width:100%}th,td{word-wrap:break-word}.alignright{text-align:right}.paddingright{padding-right:0}\n"] }]
    }], function () { return [{ type: i1.Router }, { type: i2.BulkScaningPaymentService }, { type: i3.PaymentLibComponent }, { type: i4.PaymentViewService }, { type: i5.OrderslistService }]; }, { FEE_RECORDS_EXISTS: [{
            type: Input,
            args: ['FEE_RECORDS_EXISTS']
        }], PAYMENTREF: [{
            type: Input,
            args: ['PAYMENTREF']
        }], ISTURNOFF: [{
            type: Input,
            args: ['ISTURNOFF']
        }], IS_BUTTON_ENABLE: [{
            type: Input,
            args: ['IS_BUTTON_ENABLE']
        }], IS_OS_AMT_AVAILABLE: [{
            type: Input,
            args: ['IS_OS_AMT_AVAILABLE']
        }], ISSFENABLE: [{
            type: Input,
            args: ['ISSFENABLE']
        }], PAYMENTSLENGTH: [{
            type: Input,
            args: ['PAYMENTSLENGTH']
        }], LEVEL: [{
            type: Input,
            args: ['LEVEL']
        }], selectedUnprocessedFeeEvent: [{
            type: Output
        }], getUnprocessedFeeCount: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,