import { CaseField } from '../domain/definition';
export class CaseFieldBuilder {
    constructor() {
        this.caseField = new CaseField();
    }
    static create() {
        return new CaseFieldBuilder();
    }
    withACLs(acls) {
        this.caseField.acls = acls;
        return this;
    }
    withId(id) {
        this.caseField.id = id;
        return this;
    }
    withFieldType(fieldType) {
        this.caseField.field_type = fieldType;
        return this;
    }
    withDisplayContext(displayContext) {
        this.caseField.display_context = displayContext;
        return this;
    }
    withDisplayContextParameter(displayContextParameter) {
        this.caseField.display_context_parameter = displayContextParameter;
        return this;
    }
    withHidden(hidden) {
        this.caseField.hidden = hidden;
        return this;
    }
    withHintText(hintText) {
        this.caseField.hint_text = hintText;
        return this;
    }
    withLabel(label) {
        this.caseField.label = label;
        return this;
    }
    withOrder(order) {
        this.caseField.order = order;
        return this;
    }
    withSecurityLabel(securityLabel) {
        this.caseField.security_label = securityLabel;
        return this;
    }
    withShowCondition(showCondition) {
        this.caseField.show_condition = showCondition;
        return this;
    }
    withShowSummaryContentOption(option) {
        this.caseField.show_summary_content_option = option;
        return this;
    }
    withValue(value) {
        this.caseField.value = value;
        return this;
    }
    withListValue(value) {
        this.caseField.list_items = value;
        return this;
    }
    build() {
        return this.caseField;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzZS1maWVsZC1idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY2NkLWNhc2UtdWktdG9vbGtpdC9zcmMvbGliL3NoYXJlZC9maXh0dXJlL2Nhc2UtZmllbGQtYnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0sc0JBQXNCLENBQUM7QUFHNUQsTUFBTSxPQUFPLGdCQUFnQjtJQUE3QjtRQUVtQixjQUFTLEdBQWMsSUFBSSxTQUFTLEVBQUUsQ0FBQztJQThFMUQsQ0FBQztJQTdFUSxNQUFNLENBQUMsTUFBTTtRQUNsQixPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRU0sUUFBUSxDQUFDLElBQXlCO1FBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUMzQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxNQUFNLENBQUMsRUFBVTtRQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDdkIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sYUFBYSxDQUFDLFNBQW9CO1FBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUN0QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxrQkFBa0IsQ0FBQyxjQUFzQjtRQUM5QyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsR0FBRyxjQUFjLENBQUM7UUFDaEQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sMkJBQTJCLENBQUMsdUJBQStCO1FBQ2hFLElBQUksQ0FBQyxTQUFTLENBQUMseUJBQXlCLEdBQUcsdUJBQXVCLENBQUM7UUFDbkUsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sVUFBVSxDQUFDLE1BQWU7UUFDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFlBQVksQ0FBQyxRQUFnQjtRQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sU0FBUyxDQUFDLEtBQWE7UUFDNUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQzdCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFNBQVMsQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUM3QixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxpQkFBaUIsQ0FBQyxhQUFxQjtRQUM1QyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsR0FBRyxhQUFhLENBQUM7UUFDOUMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0saUJBQWlCLENBQUMsYUFBcUI7UUFDNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsYUFBYSxDQUFDO1FBQzlDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLDRCQUE0QixDQUFDLE1BQWM7UUFDaEQsSUFBSSxDQUFDLFNBQVMsQ0FBQywyQkFBMkIsR0FBRyxNQUFNLENBQUM7UUFDcEQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRU0sU0FBUyxDQUFDLEtBQVU7UUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQzdCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLGFBQWEsQ0FBQyxLQUFVO1FBQzdCLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUNsQyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTSxLQUFLO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhc2VGaWVsZCwgRmllbGRUeXBlIH0gZnJvbSAnLi4vZG9tYWluL2RlZmluaXRpb24nO1xuaW1wb3J0IHsgQWNjZXNzQ29udHJvbExpc3QgfSBmcm9tICcuLi9kb21haW4vZGVmaW5pdGlvbi9hY2Nlc3MtY29udHJvbC1saXN0Lm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIENhc2VGaWVsZEJ1aWxkZXIge1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgY2FzZUZpZWxkOiBDYXNlRmllbGQgPSBuZXcgQ2FzZUZpZWxkKCk7XG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlKCk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHJldHVybiBuZXcgQ2FzZUZpZWxkQnVpbGRlcigpO1xuICB9XG5cbiAgcHVibGljIHdpdGhBQ0xzKGFjbHM6IEFjY2Vzc0NvbnRyb2xMaXN0W10pOiBDYXNlRmllbGRCdWlsZGVyIHtcbiAgICB0aGlzLmNhc2VGaWVsZC5hY2xzID0gYWNscztcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoSWQoaWQ6IHN0cmluZyk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLmlkID0gaWQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwdWJsaWMgd2l0aEZpZWxkVHlwZShmaWVsZFR5cGU6IEZpZWxkVHlwZSk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLmZpZWxkX3R5cGUgPSBmaWVsZFR5cGU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwdWJsaWMgd2l0aERpc3BsYXlDb250ZXh0KGRpc3BsYXlDb250ZXh0OiBzdHJpbmcpOiBDYXNlRmllbGRCdWlsZGVyIHtcbiAgICB0aGlzLmNhc2VGaWVsZC5kaXNwbGF5X2NvbnRleHQgPSBkaXNwbGF5Q29udGV4dDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoRGlzcGxheUNvbnRleHRQYXJhbWV0ZXIoZGlzcGxheUNvbnRleHRQYXJhbWV0ZXI6IHN0cmluZyk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLmRpc3BsYXlfY29udGV4dF9wYXJhbWV0ZXIgPSBkaXNwbGF5Q29udGV4dFBhcmFtZXRlcjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoSGlkZGVuKGhpZGRlbjogYm9vbGVhbik6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLmhpZGRlbiA9IGhpZGRlbjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoSGludFRleHQoaGludFRleHQ6IHN0cmluZyk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLmhpbnRfdGV4dCA9IGhpbnRUZXh0O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcHVibGljIHdpdGhMYWJlbChsYWJlbDogc3RyaW5nKTogQ2FzZUZpZWxkQnVpbGRlciB7XG4gICAgdGhpcy5jYXNlRmllbGQubGFiZWwgPSBsYWJlbDtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoT3JkZXIob3JkZXI6IG51bWJlcik6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLm9yZGVyID0gb3JkZXI7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwdWJsaWMgd2l0aFNlY3VyaXR5TGFiZWwoc2VjdXJpdHlMYWJlbDogc3RyaW5nKTogQ2FzZUZpZWxkQnVpbGRlciB7XG4gICAgdGhpcy5jYXNlRmllbGQuc2VjdXJpdHlfbGFiZWwgPSBzZWN1cml0eUxhYmVsO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcHVibGljIHdpdGhTaG93Q29uZGl0aW9uKHNob3dDb25kaXRpb246IHN0cmluZyk6IENhc2VGaWVsZEJ1aWxkZXIge1xuICAgIHRoaXMuY2FzZUZpZWxkLnNob3dfY29uZGl0aW9uID0gc2hvd0NvbmRpdGlvbjtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoU2hvd1N1bW1hcnlDb250ZW50T3B0aW9uKG9wdGlvbjogbnVtYmVyKTogQ2FzZUZpZWxkQnVpbGRlciB7XG4gICAgdGhpcy5jYXNlRmllbGQuc2hvd19zdW1tYXJ5X2NvbnRlbnRfb3B0aW9uID0gb3B0aW9uO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcHVibGljIHdpdGhWYWx1ZSh2YWx1ZTogYW55KTogQ2FzZUZpZWxkQnVpbGRlciB7XG4gICAgdGhpcy5jYXNlRmllbGQudmFsdWUgPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHB1YmxpYyB3aXRoTGlzdFZhbHVlKHZhbHVlOiBhbnkpOiBDYXNlRmllbGRCdWlsZGVyIHtcbiAgICB0aGlzLmNhc2VGaWVsZC5saXN0X2l0ZW1zID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwdWJsaWMgYnVpbGQoKTogQ2FzZUZpZWxkIHtcbiAgICByZXR1cm4gdGhpcy5jYXNlRmllbGQ7XG4gIH1cbn1cbiJdfQ==