import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class OrderslistService {
    ordersList = new BehaviorSubject(null);
    refundView = new BehaviorSubject(null);
    caseType = new BehaviorSubject("");
    getcaseType = this.caseType.asObservable();
    feeExists = new BehaviorSubject(null);
    getFeeExist = this.feeExists.asObservable();
    ccdCaseNumber = new BehaviorSubject("");
    getCCDCaseNumberforRefund = this.ccdCaseNumber.asObservable();
    isFromServiceRequestPage = new BehaviorSubject(null);
    getisFromServiceRequestPage = this.isFromServiceRequestPage.asObservable();
    OrderRefId = new BehaviorSubject("");
    getOrderRefId = this.OrderRefId.asObservable();
    navigationPage = new BehaviorSubject("");
    getnavigationPage = this.navigationPage.asObservable();
    orderRef = new BehaviorSubject("");
    getorderRef = this.orderRef.asObservable();
    orderCCDEvent = new BehaviorSubject("");
    getorderCCDEvent = this.caseType.asObservable();
    orderCreated = new BehaviorSubject(null);
    getorderCreated = this.orderCreated.asObservable();
    orderParty = new BehaviorSubject("");
    getorderParty = this.orderParty.asObservable();
    orderRemissionTotal = new BehaviorSubject(null);
    getorderRemissionTotal = this.orderRemissionTotal.asObservable();
    orderFeesTotal = new BehaviorSubject(null);
    getorderFeesTotal = this.orderFeesTotal.asObservable();
    orderTotalPayments = new BehaviorSubject(null);
    getorderTotalPayments = this.orderTotalPayments.asObservable();
    rolesList = new BehaviorSubject(null);
    orderDetail = new BehaviorSubject(null);
    paymentPageView = new BehaviorSubject(null);
    constructor() { }
    setOrdersList(orderLevelFees) {
        this.ordersList.next(Object.assign([], orderLevelFees));
    }
    getOrdersList() {
        return this.ordersList;
    }
    setRefundView(refundList) {
        this.refundView.next(Object.assign([], refundList));
    }
    getRefundView() {
        return this.refundView;
    }
    setCaseType(caseType) {
        this.caseType.next(caseType);
    }
    getCaseType() {
        return this.caseType;
    }
    setCCDCaseNumber(ccdCaseNumber) {
        this.ccdCaseNumber.next(ccdCaseNumber);
    }
    getCCDCaseNumber() {
        return this.ccdCaseNumber;
    }
    setFeeExists(feeExists) {
        this.feeExists.next(feeExists);
    }
    getFeeExists() {
        return this.feeExists;
    }
    setisFromServiceRequestPage(isFromServiceRequestPage) {
        this.isFromServiceRequestPage.next(isFromServiceRequestPage);
    }
    getisFromServiceRequestPages() {
        return this.isFromServiceRequestPage;
    }
    setOrderRefId(OrderRefId) {
        this.OrderRefId.next(OrderRefId);
    }
    getSelectedOrderRefId() {
        return this.OrderRefId;
    }
    setnavigationPage(navigationPage) {
        this.navigationPage.next(navigationPage);
    }
    getnavigationPageValue() {
        return this.navigationPage;
    }
    setpaymentPageView(paymentpageList) {
        this.paymentPageView.next(Object.assign([], paymentpageList));
    }
    getpaymentPageView() {
        return this.paymentPageView;
    }
    setUserRolesList(rolesList) {
        this.rolesList.next(Object.assign([], rolesList));
    }
    getUserRolesList() {
        return this.rolesList;
    }
    setorderDetail(orderDetail) {
        this.orderDetail.next(Object.assign([], orderDetail));
    }
    getorderDetail() {
        return this.orderDetail;
    }
    setOrderRef(orderRef) {
        this.orderRef.next(orderRef);
    }
    getorderRefs() {
        return this.orderRef;
    }
    setorderCCDEvent(orderCCDEvent) {
        this.orderCCDEvent.next(orderCCDEvent);
    }
    getorderCCDEvents() {
        return this.orderCCDEvent;
    }
    setorderCreated(orderCreated) {
        this.orderCreated.next(orderCreated);
    }
    getorderCreateds() {
        return this.orderCreated;
    }
    setorderParty(orderParty) {
        this.orderParty.next(orderParty);
    }
    getorderPartys() {
        return this.orderParty;
    }
    setorderRemissionTotal(orderRemissionTotal) {
        this.orderRemissionTotal.next(orderRemissionTotal);
    }
    getorderRemissionTotals() {
        return this.orderRemissionTotal;
    }
    setorderFeesTotal(orderFeesTotal) {
        this.orderFeesTotal.next(orderFeesTotal);
    }
    getorderFeesTotals() {
        return this.orderFeesTotal;
    }
    setorderTotalPayments(orderTotalPayments) {
        this.orderTotalPayments.next(orderTotalPayments);
    }
    getoorderTotalPaymentss() {
        return this.orderTotalPayments;
    }
    static ɵfac = function OrderslistService_Factory(t) { return new (t || OrderslistService)(); };
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: OrderslistService, factory: OrderslistService.ɵfac, providedIn: 'root' });
}
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(OrderslistService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
//# sourceMappingURL=data:application/json;base64,